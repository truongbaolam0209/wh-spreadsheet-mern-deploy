[{"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\index.js":"1","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\App.js":"2","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\reportWebVitals.js":"3","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\cellContext.js":"4","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\rowContext.js":"5","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\projectContext.js":"6","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\_createDataContext.js":"7","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\utils\\index.js":"8","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\constants\\index.js":"9","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\utils\\functionDashboard.js":"10","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\assets\\constantDashboard.js":"11","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\PageDashboard.js":"12","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\PageSpreadsheet.js":"13","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawing.js":"14","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanelProject.js":"15","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawingLate.js":"16","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarStack.js":"17","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartProgress.js":"18","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartPieDrawing.js":"19","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellIndex.js":"20","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_FormPivot.js":"21","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_TableDrawingList.js":"22","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellHeader.js":"23","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\Cell.js":"24","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\IconTable.js":"25","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\InputSearch.js":"26","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelFunction.js":"27","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelSetting.js":"28","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanel.js":"29","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\PanelRightClick.js":"30","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecordPanel.js":"31","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendar.js":"32","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableCellHistory.js":"33","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableDrawingDetail.js":"34","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableActivityHistory.js":"35","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ReorderColumnForm.js":"36","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelConfirm.js":"37","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormSort.js":"38","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilter.js":"39","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormGroup.js":"40","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormCellColorizedCheck.js":"41","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDrawingTypeOrder.js":"42","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDateAutomation.js":"43","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonGroupComp.js":"44","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ColorizedForm.js":"45","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecord.js":"46","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilterActivityHistory.js":"47","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendarDuration.js":"48","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonStyle.js":"49"},{"size":507,"mtime":1607175136833,"results":"50","hashOfConfig":"51"},{"size":1928,"mtime":1610941864285,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1606274463595,"results":"53","hashOfConfig":"51"},{"size":1435,"mtime":1609840744275,"results":"54","hashOfConfig":"51"},{"size":582,"mtime":1609148593298,"results":"55","hashOfConfig":"51"},{"size":964,"mtime":1609149456727,"results":"56","hashOfConfig":"51"},{"size":613,"mtime":1604905406752,"results":"57","hashOfConfig":"51"},{"size":26240,"mtime":1610864544619,"results":"58","hashOfConfig":"51"},{"size":789,"mtime":1609170899693,"results":"59","hashOfConfig":"51"},{"size":14744,"mtime":1610213520087,"results":"60","hashOfConfig":"51"},{"size":3440,"mtime":1610292716572,"results":"61","hashOfConfig":"51"},{"size":10781,"mtime":1610945156223,"results":"62","hashOfConfig":"51"},{"size":34804,"mtime":1610946171499,"results":"63","hashOfConfig":"51"},{"size":6472,"mtime":1610184143931,"results":"64","hashOfConfig":"51"},{"size":1103,"mtime":1610275307316,"results":"65","hashOfConfig":"51"},{"size":3969,"mtime":1610864500428,"results":"66","hashOfConfig":"51"},{"size":5941,"mtime":1610213542808,"results":"67","hashOfConfig":"51"},{"size":3282,"mtime":1610944938938,"results":"68","hashOfConfig":"51"},{"size":2971,"mtime":1610189356028,"results":"69","hashOfConfig":"51"},{"size":758,"mtime":1609775818433,"results":"70","hashOfConfig":"51"},{"size":5568,"mtime":1610202412471,"results":"71","hashOfConfig":"51"},{"size":20209,"mtime":1610213506355,"results":"72","hashOfConfig":"51"},{"size":530,"mtime":1609861179935,"results":"73","hashOfConfig":"51"},{"size":12178,"mtime":1610868950801,"results":"74","hashOfConfig":"51"},{"size":2924,"mtime":1610288396584,"results":"75","hashOfConfig":"51"},{"size":4007,"mtime":1610945816071,"results":"76","hashOfConfig":"51"},{"size":2644,"mtime":1610808655443,"results":"77","hashOfConfig":"51"},{"size":29260,"mtime":1610946031083,"results":"78","hashOfConfig":"51"},{"size":1002,"mtime":1610175003252,"results":"79","hashOfConfig":"51"},{"size":1139,"mtime":1610175167433,"results":"80","hashOfConfig":"51"},{"size":1724,"mtime":1610197653543,"results":"81","hashOfConfig":"51"},{"size":381,"mtime":1608382149906,"results":"82","hashOfConfig":"51"},{"size":2136,"mtime":1610703654957,"results":"83","hashOfConfig":"51"},{"size":5334,"mtime":1610849777416,"results":"84","hashOfConfig":"51"},{"size":12233,"mtime":1610851825770,"results":"85","hashOfConfig":"51"},{"size":6021,"mtime":1610295435799,"results":"86","hashOfConfig":"51"},{"size":756,"mtime":1610863855133,"results":"87","hashOfConfig":"51"},{"size":6079,"mtime":1609942695103,"results":"88","hashOfConfig":"51"},{"size":5786,"mtime":1610862140657,"results":"89","hashOfConfig":"51"},{"size":4397,"mtime":1610862334014,"results":"90","hashOfConfig":"51"},{"size":3639,"mtime":1610851945652,"results":"91","hashOfConfig":"51"},{"size":10121,"mtime":1610851698477,"results":"92","hashOfConfig":"51"},{"size":4382,"mtime":1610850706426,"results":"93","hashOfConfig":"51"},{"size":751,"mtime":1608563473295,"results":"94","hashOfConfig":"51"},{"size":3547,"mtime":1610276241014,"results":"95","hashOfConfig":"51"},{"size":3348,"mtime":1610175605402,"results":"96","hashOfConfig":"51"},{"size":5448,"mtime":1610862224883,"results":"97","hashOfConfig":"51"},{"size":798,"mtime":1610259509164,"results":"98","hashOfConfig":"51"},{"size":723,"mtime":1609943027873,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"utwymk",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\index.js",[],["202","203"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\App.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\reportWebVitals.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\cellContext.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\rowContext.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\projectContext.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\_createDataContext.js",["204"],"import React, { createContext, useReducer } from 'react';\r\n\r\n\r\nexport default (reducer, actions, initValue) => {\r\n\r\n    const Context = createContext();\r\n\r\n    const Provider = ({ children }) => {\r\n        const [state, dispatch] = useReducer(reducer, initValue);\r\n\r\n        const boundActions = {};\r\n        for (let key in actions) {\r\n            boundActions[key] = actions[key](dispatch);\r\n        };\r\n\r\n        return (\r\n            <Context.Provider value={{ state, ...boundActions }}>\r\n                {children}\r\n            </Context.Provider>\r\n        );\r\n    };\r\n    return { Context, Provider };\r\n};\r\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\utils\\index.js",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import _ from 'lodash';\r\n\r\n\r\nexport const colorTypeStatus = {\r\n    yellow: '#fff200',\r\n    dark: '#1e272e',\r\n    grey0: '#ecf0f1',\r\n    grey1: '#bdc3c7',\r\n    grey2: '#636e72',\r\n    grey3: '#dfe4ea',\r\n    grey4: '#f1f2f6',\r\n    red: '#FA8072',\r\n    green: '#009432',\r\n    blue: '#0984e3',\r\n    orange: '#cc8e35',\r\n    purple: '#303952',\r\n    rose: '#e84118',\r\n    black: 'black',\r\n    orange2: '#f1c40f',\r\n    pp: '#9b59b6',\r\n    pp2: '#10ac84',\r\n};\r\n\r\n\r\n\r\nexport const randomColorRangeStatus = {\r\n    'Approved with comments, to Resubmit': colorTypeStatus.purple,\r\n    'Approved with Comment, no submission Required': colorTypeStatus.blue,\r\n    'Approved for Construction': colorTypeStatus.green,\r\n    'Consultant reviewing': colorTypeStatus.grey2,\r\n    'Not Started': colorTypeStatus.orange,\r\n    'Revise In-Progress': colorTypeStatus.yellow,\r\n    '1st cut of drawing in-progress': colorTypeStatus.pp2,\r\n    '1st cut of model in-progress': colorTypeStatus.pp,\r\n    'Pending design': colorTypeStatus.orange2,\r\n    'Reject and resubmit': colorTypeStatus.red,\r\n\r\n    'Consultant review and reply': colorTypeStatus.blue,\r\n    'Create update drawing': colorTypeStatus.orange,\r\n    'Create update model': colorTypeStatus.green,\r\n};\r\nexport const randomColorRange = [\r\n    '#FFDEAD',\r\n    '#98FB98',\r\n    '#e74c3c',\r\n    '#9b59b6',\r\n    '#1abc9c',\r\n    '#95a5a6'\r\n];\r\n\r\n\r\nexport const formatStringNameToId = (str) => {\r\n    let mystring = str\r\n        .replace(/ /g, '')\r\n        .replace(/\\(|\\)/g, '')\r\n        .replace(/\\//g, '');\r\n\r\n    return mystring.charAt(0).toLowerCase() + mystring.slice(1);\r\n};\r\n\r\nexport const genId = (xxx) => {\r\n    let arr = [];\r\n    for (let i = 0; i < xxx; i++) {\r\n        arr.push(mongoObjectId());\r\n    };\r\n    return arr;\r\n};\r\n\r\nexport const debounceFnc = (func, delay) => {\r\n    let timeout;\r\n    return function (...args) {\r\n        const context = this;\r\n        if (timeout) clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n            timeout = null;\r\n            func.apply(context, args);\r\n        }, delay);\r\n    };\r\n};\r\n\r\nexport const extractCellInfo = (key) => {\r\n    return {\r\n        rowId: key.slice(0, 24),\r\n        headerName: key.slice(25, key.length)\r\n    }\r\n};\r\n\r\n\r\nexport const mongoObjectId = () => {\r\n    var timestamp = (new Date().getTime() / 1000 | 0).toString(16);\r\n    return timestamp + 'xxxxxxxxxxxxxxxx'.replace(/[x]/g, function () {\r\n        return (Math.random() * 16 | 0).toString(16);\r\n    }).toLowerCase();\r\n};\r\n\r\n\r\nexport const getHeadersText = (headers) => {\r\n    if (!headers) return [];\r\n    let arr = [];\r\n    headers.forEach(hd => {\r\n        arr.push(hd.text);\r\n    });\r\n    return arr;\r\n};\r\n\r\nexport const getHeaderKey = (headers, headerText) => {\r\n    if (!headers) return;\r\n    return headers.find(hd => hd.text === headerText).key;\r\n};\r\n\r\n\r\n\r\nexport const groupRowsBy = (array, key) => {\r\n\r\n    return array.reduce((result, currentValue) => {\r\n        (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n            currentValue\r\n        );\r\n\r\n        return result;\r\n    }, {});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const mapSubRows = (rows) => {\r\n\r\n    if (!rows) return;\r\n\r\n    let rowsArr = rows.filter(r => r._rowLevel === 0);\r\n\r\n    if (rowsArr.length < 1) return rows;\r\n\r\n    let rowsSubArr = rows.filter(r => r._rowLevel === 1);\r\n    if (rowsSubArr.length < 1) return rows;\r\n\r\n    const rowsDataOutput = rowsArr.map(r => {\r\n        let subR = rowsSubArr.filter(rSub => rSub._parentRow === r.id);\r\n        return {\r\n            ...r, children: subR\r\n        }\r\n    });\r\n    return rowsDataOutput;\r\n};\r\n\r\n\r\n\r\n\r\nexport const groupByHeaders = (data, headers) => {\r\n    let res = [];\r\n    let _map = {};\r\n    // push all rowIds have children in here\r\n    let parentIdsArr = [];\r\n    let _mapParentIds = {};\r\n\r\n    for (let item of data) {\r\n        let _prevLevelKey = '';\r\n        let _prevLevelParent = null;\r\n        for (let i = 0, level = headers.length * (-1) + 1; i < headers.length; i++, level++) {\r\n            let arrayParent = i == 0 ? res : _prevLevelParent.children;\r\n\r\n            let header = headers[i];\r\n            let value = String(item[header]).trim() || '';\r\n\r\n            let levelKey = `${_prevLevelKey}_._${value}`;\r\n            let levelParentIndex = _map[levelKey];\r\n            let levelParent = arrayParent[levelParentIndex];\r\n\r\n            if (!levelParent) {\r\n                let iddd = mongoObjectId();\r\n                levelParent = _newParent(item, header, level, iddd);\r\n\r\n                _map[levelKey] = arrayParent.length;\r\n                arrayParent.push(levelParent);\r\n            };\r\n\r\n            levelParent.count++;\r\n            // levelParent[header] = `${item[header]}: (${levelParent.count} nos)`;\r\n            levelParent['Drawing Number'] = `${String(item[header]).toUpperCase()}: (${levelParent.count} nos)`;\r\n\r\n            if (!_mapParentIds[levelParent.id]) { // levelParent id not yet been push to parentIdsArr\r\n                parentIdsArr.push(levelParent.id);\r\n                _mapParentIds[levelParent.id] = true;\r\n            }\r\n\r\n            if (i == headers.length - 1) {\r\n                levelParent.children.push(item);\r\n            } else {\r\n                _prevLevelKey = levelKey;\r\n                _prevLevelParent = levelParent;\r\n            };\r\n        };\r\n    };\r\n    return {\r\n        rows: res,\r\n        expandedRows: parentIdsArr\r\n    };\r\n};\r\nfunction _newParent(item, header, level, iddd) {\r\n    return {\r\n        id: iddd,\r\n        _rowLevel: level,\r\n        _src_header: item[header],\r\n        count: 0,\r\n        children: []\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const convertCellTempToHistory = (\r\n    cellsModifiedTemp,\r\n    stateProject\r\n) => {\r\n    const { email, publicSettings } = stateProject.allDataOneSheet;\r\n    const cellsHistoryData = Object.keys(cellsModifiedTemp).map(key => {\r\n        const { rowId, headerName } = extractCellInfo(key);\r\n        const dataOut = {\r\n            rowId,\r\n            headerKey: getHeaderKey(publicSettings.headers, headerName),\r\n            history: {\r\n                text: cellsModifiedTemp[key],\r\n                email,\r\n                createdAt: new Date(),\r\n            }\r\n        };\r\n        return dataOut;\r\n    });\r\n    return cellsHistoryData;\r\n};\r\n\r\nexport const convertDrawingVersionToHistory = (\r\n    rowsHistory,\r\n    stateProject\r\n) => {\r\n    const { publicSettings } = stateProject.allDataOneSheet;\r\n\r\n    const rowsHistoryOutput = rowsHistory.map(rowsH => {\r\n        let obj = {};\r\n        publicSettings.headers.forEach(hd => {\r\n            if (rowsH[hd.text]) obj = { ...obj || {}, [hd.key]: rowsH[hd.text] };\r\n        });\r\n        return {\r\n            row: rowsH.id,\r\n            history: obj,\r\n        };\r\n    });\r\n    return rowsHistoryOutput;\r\n};\r\n\r\n\r\n\r\n\r\nexport const convertHistoryData = (data) => {\r\n    let arr = [];\r\n    data.forEach(ch => {\r\n        const { histories, headerKey, row } = ch;\r\n        histories.forEach(dt => {\r\n            arr.push({\r\n                ...dt,\r\n                headerKey, row\r\n            });\r\n        });\r\n    });\r\n    return arr\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const addZero = (num) => {\r\n    if (num < 10) return '0' + num;\r\n    return num;\r\n};\r\n\r\nconst getRndInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n};\r\n\r\n\r\nconst findHeaderId = (headers, headerName) => {\r\n    let header = headers.find(hd => hd.text === headerName);\r\n    return header.key;\r\n};\r\n\r\n\r\n\r\nexport const convertHeadersTextToKeyArray = (headersText, headers) => {\r\n\r\n    return headersText.map(hdText => {\r\n        let hdObj = headers.find(hd => hd.text === hdText);\r\n\r\n        return hdObj.key\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst _groupSubRowsByParentId = (subRows) => {\r\n    let groups = {};\r\n    for (let subRow of subRows) {\r\n        let parentId = subRow._parentRow;\r\n        let group = groups[parentId] || [];\r\n        groups[parentId] = group;\r\n        group.push(subRow);\r\n    };\r\n    return groups;\r\n};\r\nconst _filterRows = (rowsData) => {\r\n    let rows = [];\r\n    let subRowsLv1 = [];\r\n    let subRowsLv2 = [];\r\n\r\n    for (let rowData of rowsData) {\r\n        let level = rowData._rowLevel;\r\n        if (level === 0) {\r\n            rows.push(rowData);\r\n        } else if (level == 1) {\r\n            subRowsLv1.push(rowData);\r\n        } else if (level == 2) {\r\n            subRowsLv2.push(rowData);\r\n        };\r\n    };\r\n    return [rows, subRowsLv1, subRowsLv2];\r\n};\r\nexport const sortRowsReorder = (rowsData) => {\r\n    let [rows, subRowsLv1, subRowsLv2] = _filterRows(rowsData);\r\n    let rowsProcessed = [];\r\n    let groupSubRowsLv1 = _groupSubRowsByParentId(subRowsLv1);\r\n    let groupSubRowsLv2 = _groupSubRowsByParentId(subRowsLv2);\r\n\r\n    let firstRowIndex = rows.findIndex((row) => row._preRow === null);\r\n    if (firstRowIndex >= 0) {\r\n        let preRow = rows.splice(firstRowIndex, 1)[0];\r\n        while (preRow) {\r\n            rowsProcessed.push(preRow);\r\n\r\n            // sort & format subRowsLv1\r\n            let subRowsLv1 = groupSubRowsLv1[preRow.id] || [];\r\n            let firstSubRowLv1Index = subRowsLv1.findIndex(\r\n                (sr1) => sr1._preRow == null\r\n            );\r\n            if (firstSubRowLv1Index >= 0) {\r\n                let preSubRowLv1 = subRowsLv1.splice(firstSubRowLv1Index, 1)[0];\r\n                while (preSubRowLv1) {\r\n                    rowsProcessed.push(preSubRowLv1);\r\n\r\n                    // sort & format subRowsLv2\r\n                    let subRowsLv2 = groupSubRowsLv2[preSubRowLv1.id] || [];\r\n                    let firstSubRowLv2Index = subRowsLv2.findIndex(\r\n                        (sr2) => sr2._preRow == null\r\n                    );\r\n                    if (firstSubRowLv2Index >= 0) {\r\n                        let preSubRowLv2 = subRowsLv2.splice(firstSubRowLv2Index, 1)[0];\r\n                        while (preSubRowLv2) {\r\n                            rowsProcessed.push(preSubRowLv2);\r\n\r\n                            let nextSubRowLv2Index = subRowsLv2.findIndex(\r\n                                (sr2) => String(sr2._preRow) == String(preSubRowLv2.id)\r\n                            );\r\n                            if (nextSubRowLv2Index >= 0) {\r\n                                preSubRowLv2 = subRowsLv2.splice(nextSubRowLv2Index, 1)[0];\r\n                            } else {\r\n                                preSubRowLv2 = null;\r\n                            };\r\n                        };\r\n                    };\r\n\r\n                    let nextSubRowLv1Index = subRowsLv1.findIndex(\r\n                        (sr1) => String(sr1._preRow) == String(preSubRowLv1.id)\r\n                    );\r\n                    if (nextSubRowLv1Index >= 0) {\r\n                        preSubRowLv1 = subRowsLv1.splice(nextSubRowLv1Index, 1)[0];\r\n                    } else {\r\n                        preSubRowLv1 = null;\r\n                    };\r\n                };\r\n            };\r\n\r\n            let nextRowIndex = rows.findIndex(\r\n                (row) => String(row._preRow) == String(preRow.id)\r\n            );\r\n            if (nextRowIndex >= 0) {\r\n                preRow = rows.splice(nextRowIndex, 1)[0];\r\n            } else {\r\n                preRow = null;\r\n            };\r\n        };\r\n    };\r\n\r\n    return rowsProcessed;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// WORKING WITH SMARTHSHEET ..................................................................\r\n\r\nexport const getDataConvertedSmartsheet = (projectArray) => {\r\n\r\n    let dataOutput = {};\r\n    for (let i = 0; i < projectArray.length; i++) {\r\n\r\n        // get the column header\r\n        const project = projectArray[i];\r\n        const categoryArray = _.map(project.columns, 'title');\r\n        let columnsIndexArray = {};\r\n        categoryArray.forEach(cate => {\r\n            project.columns.forEach(cl => {\r\n                if (cl.title === cate) columnsIndexArray[cate] = cl.index;\r\n            });\r\n        });\r\n\r\n        let allDrawings = [];\r\n\r\n        for (let i = 0; i < project.rows.length; i++) {\r\n            const dwg = project.rows[i];\r\n            allDrawings.push([...dwg.cells]);\r\n        };\r\n\r\n        dataOutput[project.name.slice(0, project.name.length - 17)] = {\r\n            allDrawings,\r\n            allDrawingsSorted: pickDataToTable(allDrawings, columnsIndexArray)\r\n        };\r\n    };\r\n\r\n    return dataOutput;\r\n};\r\n\r\nconst pickDataToTable = (drawings, columnsIndexArray) => {\r\n    let arrayDrw = [];\r\n    drawings.forEach(dwg => {\r\n        let objDwg = {};\r\n        Object.keys(columnsIndexArray).forEach(header => {\r\n            if (header === 'Rev') {\r\n                objDwg[checkSpelling(header)] = dwg[columnsIndexArray[header]].displayValue;\r\n            } else {\r\n                if (dwg[columnsIndexArray[header]].value) {\r\n                    objDwg[checkSpelling(header)] = dwg[columnsIndexArray[header]].value;\r\n                };\r\n            };\r\n        });\r\n        arrayDrw.push(objDwg);\r\n    });\r\n    return arrayDrw;\r\n};\r\n\r\n\r\nconst checkSpelling = (header) => {\r\n    if (header === 'Construction issuance date') return 'Construction Issuance Date';\r\n    if (header === 'Drg to Consultant (T)') return 'Drg To Consultant (T)';\r\n    if (header === 'Drg to Consultant (A)') return 'Drg To Consultant (A)';\r\n    if (header === 'get Approval (A)') return 'Get Approval (A)';\r\n    if (header === 'get Approval (T)') return 'Get Approval (T)';\r\n    return header;\r\n};\r\n\r\n\r\n\r\nexport const getHeaderWidth = (header) => {\r\n\r\n    if (header === 'RFA Ref') return 170;\r\n    else if (\r\n        header === 'Block/Zone' ||\r\n        header === 'Level' || header === 'Unit/CJ' ||\r\n        header === 'Drg Type' || header === 'Use For' ||\r\n        header === 'Coordinator In Charge' || header === 'Modeller' ||\r\n        header === 'Model Progress' || header === 'Drawing Progress' ||\r\n        header === 'Construction Start'\r\n    ) return 100;\r\n    else if (header === 'Construction Issuance Date') return 120;\r\n    else if (header === 'Drawing') return 100;\r\n\r\n    else if (\r\n        header === 'Drg To Consultant (A)' ||\r\n        header === 'Drg To Consultant (T)' ||\r\n        header === 'Get Approval (A)' ||\r\n        header === 'Get Approval (T)'\r\n    ) return 120;\r\n\r\n    else if (header.includes('(A)') || header.includes('(T)')) return 90;\r\n\r\n\r\n\r\n\r\n    else if (header === 'Rev') return 60;\r\n    else if (header === 'Status') return 280;\r\n    else if (header === 'Remark') return 120;\r\n    else if (header === 'Drawing Number') return 350;\r\n    else if (header === 'Drawing Name') return 450;\r\n    else return 300;\r\n\r\n};\r\n\r\nexport const rowClassNameGetColumnsValue = (rows, headers) => {\r\n    let valueObj = {};\r\n    headers.forEach(hd => {\r\n        let valueArr = rows.map(row => row[hd.text] || '');\r\n        valueArr = [...new Set(valueArr)].filter(e => e);\r\n        valueArr.sort((a, b) => a > b ? 1 : (b > a ? -1 : 0));\r\n        if (valueArr.length > 0) valueObj[hd.text] = valueArr;\r\n    });\r\n    return valueObj;\r\n};\r\nexport const getActionName = (type) => {\r\n    if (type === 'filter-ICON') return 'Create New Filter';\r\n    if (type === 'reorderColumn-ICON') return 'Columns Layout';\r\n    if (type === 'group-ICON') return 'Group Data';\r\n    if (type === 'sort-ICON') return 'Sort Data';\r\n    if (type === 'swap-ICON') return 'Clear Filter/Sort/Group/Search';\r\n    if (type === 'addDrawingType-ICON') return 'Drawing Type Organization';\r\n    if (type === 'color-cell-history-ICON') return 'Check Data Changed';\r\n    if (type === 'View Cell History') return 'Cell History';\r\n    if (type === 'Delete Drawing') return 'Delete Drawing';\r\n    // if (type === 'history-ICON') return 'Activity History';\r\n    if (type === 'colorized-ICON') return 'Drawing Colorization';\r\n    if (type && type.includes('Insert Drawings')) return 'Nos Of Drawings';\r\n\r\n    else return '';\r\n};\r\nexport const getModalWidth = (type) => {\r\n    if (type === 'history-ICON') return window.innerWidth * 0.8 + 20;\r\n    else return 520;\r\n};\r\n\r\n\r\n\r\n\r\nconst createParentRows = (arr) => {\r\n    let newRows = [];\r\n    arr.forEach((title, i) => {\r\n        newRows.push({\r\n            id: mongoObjectId(),\r\n            _rowLevel: 0,\r\n            expanded: true,\r\n            'Drawing Number': title\r\n        });\r\n    });\r\n    return newRows;\r\n};\r\nconst getParentRowsHandy = () => {\r\n    let arrParentTitle = [\r\n        'COLUMN AND WALL SETTING OUT Keyplan',\r\n        'UNIT TYPE LAYOUT TSO Plan',\r\n        'STAIRCASES and LIFT LOBBIES',\r\n        'ANCILLARY STRUCTURES',\r\n        'No Name 1',\r\n        'No Name 2',\r\n        'PBU Tile layout',\r\n        'Tile layout',\r\n        'Clubhouse',\r\n        'RCP',\r\n        'RCP Unit type',\r\n        'RCP Clubhouse',\r\n        'Swimming Pool',\r\n        'External Sections/ Elevations',\r\n        'Driveway/ Pavement',\r\n        'No Name 3',\r\n        'No Name 4',\r\n        'Carpark Details',\r\n        'M&E Details',\r\n        'FAÇADE Maintenance',\r\n        'No Name 5',\r\n        'TOILETS Details',\r\n    ];\r\n    let rows = createParentRows(arrParentTitle);\r\n    return rows;\r\n};\r\nconst getParent_IdHandy = (i) => {\r\n    if (i >= 3 && i <= 47) return 0;\r\n    if (i >= 49 && i <= 94) return 1;\r\n    if (i >= 96 && i <= 147) return 2;\r\n    if (i >= 149 && i <= 162) return 3;\r\n    if (i >= 164 && i <= 168) return 4;\r\n\r\n    if (i >= 170 && i <= 175) return 5;\r\n    if (i >= 177 && i <= 191) return 6;\r\n    if (i >= 193 && i <= 202) return 7;\r\n    if (i >= 204 && i <= 209) return 8;\r\n    if (i >= 211 && i <= 224) return 9;\r\n\r\n    if (i >= 226 && i <= 246) return 10;\r\n    if (i >= 248 && i <= 250) return 11;\r\n    if (i >= 252 && i <= 259) return 12;\r\n    if (i >= 261 && i <= 264) return 13;\r\n    if (i >= 266 && i <= 269) return 14;\r\n\r\n    if (i >= 271 && i <= 274) return 15;\r\n    if (i >= 276 && i <= 279) return 16;\r\n    if (i >= 281 && i <= 283) return 17;\r\n    if (i >= 285 && i <= 289) return 18;\r\n    if (i >= 291 && i <= 292) return 19;\r\n\r\n    if (i >= 294 && i <= 296) return 20;\r\n    if (i >= 298 && i <= 306) return 21;\r\n};\r\nconst getParentRowsSumang = () => {\r\n    let arrParentTitle = [\r\n        'GRID LINE',\r\n        'PRE-COMPUTATION',\r\n        'SUBSTATION',\r\n        'BASEMENT',\r\n        'EDECK',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 42(11)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 44(12)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 22(1)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 24(3)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 26(4)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 32(6)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 34(7)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 28(5)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 46(13)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 36(8)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 30(2)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 38(9)',\r\n        'WSO (WALL SETTING-OUT PLANS) - BLK 40(10)',\r\n        'OVERALL FINISHING LAYOUT',\r\n        'SSS (STAIRCASE STOREY SHELTER)',\r\n        'REFLECTED CEILING PLAN',\r\n        'LIFT LOBBY',\r\n    ];\r\n    let rows = createParentRows(arrParentTitle);\r\n    return rows;\r\n};\r\nconst getParent_IdSumang = (i) => {\r\n    if (i >= 3 && i <= 4) return 0;\r\n    if (i >= 6 && i <= 6) return 1;\r\n    if (i >= 8 && i <= 9) return 2;\r\n    if (i >= 11 && i <= 20) return 3;\r\n    if (i >= 22 && i <= 35) return 4;\r\n\r\n    if (i >= 38 && i <= 43) return 5;\r\n    if (i >= 45 && i <= 50) return 6;\r\n    if (i >= 52 && i <= 59) return 7;\r\n    if (i >= 61 && i <= 70) return 8;\r\n    if (i >= 72 && i <= 78) return 9;\r\n\r\n    if (i >= 80 && i <= 85) return 10;\r\n    if (i >= 87 && i <= 92) return 11;\r\n    if (i >= 94 && i <= 100) return 12;\r\n    if (i >= 102 && i <= 107) return 13;\r\n    if (i >= 109 && i <= 114) return 14;\r\n\r\n    if (i >= 116 && i <= 121) return 15;\r\n    if (i >= 123 && i <= 128) return 16;\r\n    if (i >= 130 && i <= 135) return 17;\r\n    if (i >= 137 && i <= 175) return 18;\r\n    if (i >= 177 && i <= 211) return 19;\r\n\r\n    if (i >= 213 && i <= 213) return 20;\r\n    if (i >= 216 && i <= 254) return 21;\r\n};\r\n\r\nexport const getCurrentAndHistoryDrawings = (allProjects, headers) => {\r\n    let final = {};\r\n    Object.keys(allProjects).forEach(prj => {\r\n\r\n        let drawingTypeTree = prj === 'Sumang' ? getParentRowsSumang() : getParentRowsHandy();\r\n        drawingTypeTree.forEach(r => {\r\n            let headerKeyDrawingNumber = headers.find(hd => hd.text === 'Drawing Number').key;\r\n            r[headerKeyDrawingNumber] = r['Drawing Number'];\r\n            delete r['Drawing Number'];\r\n        });\r\n\r\n        let rows = prj === 'Sumang' ? allProjects['Sumang'].allDrawingsSorted : allProjects['Handy'].allDrawingsSorted;\r\n\r\n        let objChildren = {};\r\n        rows.forEach((r, i) => {\r\n            const parentIndex = prj === 'Sumang' ? getParent_IdSumang(i + 1) : getParent_IdHandy(i + 1);\r\n            objChildren[parentIndex] = [...objChildren[parentIndex] || [], r];\r\n        });\r\n\r\n        let historyOutput = [];\r\n        let rowsAllCurrentOutput = [];\r\n        Object.keys(objChildren).forEach(index => {\r\n            if (index !== 'undefined') {\r\n                let allRowsInEachFolder = objChildren[index];\r\n                let obj = {};\r\n                allRowsInEachFolder.forEach(r => {\r\n                    const key = `${r['Drawing Number'] || ''}-${r['Drawing Name'] || ''}`;\r\n                    obj[key] = [...obj[key] || [], r];\r\n                });\r\n\r\n                let rowCurrentOutput = [];\r\n                Object.keys(obj).forEach((key, i) => {\r\n                    const arr = obj[key];\r\n                    arr.sort((a, b) => ((a['Rev'] || '').toLowerCase() > (b['Rev'] || '').toLowerCase()) ? 1 : (((b['Rev'] || '').toLowerCase() > (a['Rev'] || '').toLowerCase()) ? -1 : 0));\r\n                    let rowsHistory = arr.filter((r, index) => index < arr.length - 1);\r\n                    let rowId = mongoObjectId();\r\n                    if (rowsHistory.length > 0) {\r\n                        let rowsHistoryOutput = rowsHistory.map(r => {\r\n                            let rowDataObj = { row: rowId };\r\n                            headers.forEach(hd => {\r\n                                if (r[hd.text]) rowDataObj.history = { ...rowDataObj.history || {}, [hd.key]: r[hd.text] };\r\n                            });\r\n                            return rowDataObj;\r\n                        });\r\n                        historyOutput = [...historyOutput, ...rowsHistoryOutput];\r\n                    };\r\n\r\n                    let rowCurrent = arr[arr.length - 1];\r\n                    let rowCurrentObj = {};\r\n\r\n                    headers.forEach(hd => {\r\n                        if (rowCurrent[hd.text]) rowCurrentObj.data = { ...rowCurrentObj.data || {}, [hd.key]: rowCurrent[hd.text] };\r\n                    });\r\n                    rowCurrentObj._id = rowId;\r\n                    rowCurrentObj.parentRow = drawingTypeTree[parseInt(index)].id;\r\n                    rowCurrentObj.level = 1;\r\n                    rowCurrentOutput.push(rowCurrentObj);\r\n                });\r\n                rowCurrentOutput.forEach((r, i) => {\r\n                    r.preRow = i === 0 ? null : rowCurrentOutput[i - 1]._id;\r\n                });\r\n                rowsAllCurrentOutput = [...rowsAllCurrentOutput, ...rowCurrentOutput];\r\n            };\r\n        });\r\n        final[prj] = {\r\n            rows: rowsAllCurrentOutput,\r\n            historyRows: historyOutput,\r\n            drawingTypeTree\r\n        };\r\n    });\r\n\r\n    return final;\r\n};\r\nconst getParentIdHandy = (i) => {\r\n    if (i >= 1 && i < 20) return 0;\r\n    if (i >= 20 && i < 42) return 1;\r\n    if (i >= 42 && i < 60) return 2;\r\n    if (i >= 60 && i < 76) return 3;\r\n    if (i >= 76 && i < 81) return 4;\r\n    if (i >= 81 && i < 87) return 5;\r\n    if (i >= 87 && i < 99) return 6;\r\n    if (i >= 99 && i < 109) return 7;\r\n    if (i >= 109 && i < 112) return 8;\r\n    if (i >= 112 && i < 126) return 9;\r\n    if (i >= 126 && i < 147) return 10;\r\n    if (i >= 147 && i < 150) return 11;\r\n    if (i >= 150 && i < 155) return 12;\r\n    if (i >= 155 && i < 159) return 13;\r\n    if (i >= 159 && i < 163) return 14;\r\n    if (i >= 163 && i < 167) return 15;\r\n    if (i >= 167 && i < 171) return 16;\r\n    if (i >= 171 && i < 174) return 17;\r\n    if (i >= 174 && i < 179) return 18;\r\n    if (i >= 179 && i < 181) return 19;\r\n    if (i >= 181 && i < 184) return 20;\r\n    if (i >= 184 && i < 193) return 21;\r\n};\r\n\r\nconst returnPreRowNullSumang = (i) => {\r\n    if (\r\n        i === 0 ||\r\n        i === 1 ||\r\n        i === 20 ||\r\n        i === 42 ||\r\n        i === 60 ||\r\n        i === 76 ||\r\n        i === 81 ||\r\n        i === 87 ||\r\n        i === 99 ||\r\n        i === 109 ||\r\n        i === 112 ||\r\n        i === 126 ||\r\n        i === 147 ||\r\n        i === 150 ||\r\n        i === 155 ||\r\n        i === 159 ||\r\n        i === 163 ||\r\n        i === 167 ||\r\n        i === 171 ||\r\n        i === 174 ||\r\n        i === 179 ||\r\n\r\n        i === 181 ||\r\n        i === 184\r\n    ) {\r\n        return true;\r\n    } else return false;\r\n};\r\nconst returnPreRowNullHandy = (i) => {\r\n    if (\r\n        i === 0 ||\r\n        i === 1 ||\r\n        i === 20 ||\r\n        i === 42 ||\r\n        i === 60 ||\r\n        i === 76 ||\r\n        i === 81 ||\r\n        i === 87 ||\r\n        i === 99 ||\r\n        i === 109 ||\r\n        i === 112 ||\r\n        i === 126 ||\r\n        i === 147 ||\r\n        i === 150 ||\r\n        i === 155 ||\r\n        i === 159 ||\r\n        i === 163 ||\r\n        i === 167 ||\r\n        i === 171 ||\r\n        i === 174 ||\r\n        i === 179 ||\r\n\r\n        i === 181 ||\r\n        i === 184\r\n    ) {\r\n        return true;\r\n    } else return false;\r\n};\r\n\r\n\r\n\r\nexport const reorderRowsFnc = (data) => {\r\n    let rows = [...data];\r\n    let rowsProcessed = [];\r\n    let firstRowIndex = rows.findIndex(row => row._preRow === null);\r\n    while (firstRowIndex >= 0) {\r\n        let preRow = rows.splice(firstRowIndex, 1)[0];\r\n        while (preRow) {\r\n            rowsProcessed.push(preRow);\r\n            let nextRowIndex = rows.findIndex(row => String(row._preRow) == String(preRow.id));\r\n            if (nextRowIndex >= 0) {\r\n                preRow = rows.splice(nextRowIndex, 1)[0];\r\n            } else {\r\n                preRow = null;\r\n            };\r\n        };\r\n        firstRowIndex = rows.findIndex((row) => row._preRow === null);\r\n    };\r\n    return rowsProcessed;\r\n};","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\constants\\index.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\utils\\functionDashboard.js",["222"],"import Axios from 'axios';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport { _SelectColumnFilter } from '../componentsDashboard/_TableDrawingList';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const api = Axios.create({\r\n    baseURL: '/api',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const removeUnwantedHeaders = (columnsIndexArray) => {\r\n\r\n    const unwantedHeader = [\r\n        'Delta_Date',\r\n        'Delta_IT_CT',\r\n        'Delta_Issue',\r\n        'Delta_KTP'\r\n    ];\r\n    unwantedHeader.forEach(hd => {\r\n        delete columnsIndexArray[hd];\r\n    });\r\n    return columnsIndexArray;\r\n};\r\n\r\n\r\n\r\n\r\nexport const getDataConverted = (projectArray) => {\r\n    let dataOutput = {};\r\n    for (let i = 0; i < projectArray.length; i++) {\r\n\r\n        // get the column header\r\n        const project = projectArray[i];\r\n        const categoryArray = _.map(project.columns, 'title');\r\n        let columnsIndexArray = {};\r\n        categoryArray.forEach(cate => {\r\n            project.columns.forEach(cl => {\r\n                if (cl.title === cate) columnsIndexArray[cate] = cl.index;\r\n            });\r\n        });\r\n\r\n        const indexDrawingName = columnsIndexArray['Drawing Name'];\r\n        const indexRev = columnsIndexArray['Rev'];\r\n\r\n        let allDrawings = [];\r\n        let allDrawingsLatestRevision = [];\r\n\r\n        for (let i = 0; i < project.rows.length; i++) {\r\n            const dwg = project.rows[i];\r\n            if (dwg.cells[indexDrawingName].value === undefined) continue; // make sure all drawing name is keyed in\r\n            allDrawings.push([...dwg.cells]);\r\n\r\n            if (dwg.cells[indexRev].value === undefined) {\r\n                allDrawingsLatestRevision.push([...dwg.cells]);\r\n                continue;\r\n            };\r\n\r\n            let found = false;\r\n            for (let j = 0; j < allDrawingsLatestRevision.length; j++) {\r\n                if (allDrawingsLatestRevision[j][indexDrawingName].value === dwg.cells[indexDrawingName].value) {\r\n                    found = true;\r\n                    if (String(allDrawingsLatestRevision[j][indexRev].value) < String(dwg.cells[indexRev].value)) {\r\n                        allDrawingsLatestRevision.splice(j, 1);\r\n                        allDrawingsLatestRevision.push([...dwg.cells]);\r\n                    };\r\n                    break;\r\n                };\r\n            };\r\n            if (!found) allDrawingsLatestRevision.push([...dwg.cells]);\r\n        };\r\n\r\n        dataOutput[project.name.slice(0, project.name.length - 17)] = {\r\n            columnsIndexArray: removeUnwantedHeaders(columnsIndexArray),\r\n            allDrawings,\r\n            allDrawingsLatestRevision\r\n        };\r\n    };\r\n    return dataOutput;\r\n};\r\n\r\n\r\n\r\nexport const getAllDrawingSameValueInOneColumn = (data, column, dataType) => {\r\n\r\n    const { columnsIndexArray, allDrawings, allDrawingsLatestRevision } = data;\r\n\r\n    const drawings = dataType === 'all' ? allDrawings : allDrawingsLatestRevision;\r\n    const indexCategory = columnsIndexArray[column];\r\n\r\n    let drawingCount = {};\r\n    let drawingList = {};\r\n\r\n    drawings.forEach(dwg => {\r\n        const { value } = dwg[indexCategory];\r\n\r\n        drawingCount[value] = (drawingCount[value] || 0) + 1;\r\n        drawingList[value] = [...drawingList[value] || [], dwg];\r\n    });\r\n\r\n    return {\r\n        drawingCount,\r\n        drawingList\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const getDrawingLateNow = (data, type) => {\r\n\r\n    const { allDrawingsLatestRevision, columnsIndexArray } = data;\r\n\r\n    const dwgsLateNow = [];\r\n    const columnHeader = type === 'getApproval' ? 'get Approval'\r\n        : type === 'drgToConsultant' ? 'Drg to Consultant' : null;\r\n\r\n    allDrawingsLatestRevision.forEach(dwg => {\r\n        const status = dwg[columnsIndexArray['Status']].value;\r\n        // make sure drawing is not approved or consultant reviewing\r\n        if (status && (status.includes('Approved') || status === 'Consultant reviewing')) return;\r\n\r\n        const dateT = dwg[columnsIndexArray[`${columnHeader} (T)`]].value;\r\n        const dateA = dwg[columnsIndexArray[`${columnHeader} (A)`]].value;\r\n        if (dateT === undefined || dateA !== undefined) return;\r\n\r\n        const diff = moment(dateT).diff(moment(), 'days');\r\n        if (diff < 0) dwgsLateNow.push([...dwg]);\r\n    });\r\n    return dwgsLateNow;\r\n};\r\n\r\nexport const getDrawingLateNow1 = (drawings, type) => {\r\n\r\n    const dwgsLateNow = [];\r\n    drawings.forEach(dwg => {\r\n        const status = dwg['Status'];\r\n        // make sure drawing is not approved or consultant reviewing\r\n        if (status && (status.includes('Approved') || status === 'Consultant reviewing')) return;\r\n\r\n        const dateT = dwg[`${type} (T)`];\r\n        const dateA = dwg[`${type} (A)`];\r\n        if (dateT === undefined || dateA !== undefined) return;\r\n\r\n        const diff = moment(dateT).diff(moment(), 'days');\r\n        if (diff < 0) dwgsLateNow.push(dwg);\r\n    });\r\n    return dwgsLateNow;\r\n};\r\n\r\n\r\n\r\nexport const mergeUndefined = ({ drawingCount, drawingList }, mergeWith, columnsIndexArray, columnHeader) => {\r\n    if (drawingCount['undefined'] === undefined) return;\r\n\r\n    drawingCount[mergeWith] = (drawingCount[mergeWith] || 0) + drawingCount['undefined'];\r\n    delete drawingCount['undefined'];\r\n\r\n    drawingList[mergeWith] = [...drawingList[mergeWith] || [], ...drawingList['undefined']];\r\n    delete drawingList['undefined'];\r\n\r\n    return {\r\n        drawingCount,\r\n        drawingList\r\n    };\r\n};\r\n\r\n\r\nexport const formatStringNameToId = (str) => {\r\n    let mystring = str.replace(/ /g, '').replace(/\\(|\\)/g, '');\r\n    return mystring.charAt(0).toLowerCase() + mystring.slice(1);\r\n};\r\n\r\n\r\nexport const pickDataToTable = (drawings, columnsIndexArray) => {\r\n    let arr = [];\r\n    drawings.forEach(dwg => {\r\n        let obj = {};\r\n        Object.keys(columnsIndexArray).forEach(header => {\r\n            obj[formatStringNameToId(header)] = dwg[columnsIndexArray[header]].value || '. ';\r\n        });\r\n        arr.push(obj);\r\n    });\r\n    return arr;\r\n};\r\n\r\n\r\nexport const convertDataToStackedChart = (data) => {\r\n    let dataChart = [];\r\n    let allKeys = [];\r\n    data && Object.keys(data).forEach(project => {\r\n        const { drawingCount } = mergeUndefined(getAllDrawingSameValueInOneColumn(data[project], 'Status'), 'Not Started');\r\n        dataChart.push({ ...drawingCount, name: project });\r\n        allKeys = [...allKeys, ...Object.keys(drawingCount)];\r\n    });\r\n    const itemArr = [...new Set(allKeys)];\r\n\r\n    itemArr.forEach(key => {\r\n        dataChart.forEach(projectData => {\r\n            if (key in projectData) return;\r\n            projectData[key] = 0;\r\n        });\r\n    });\r\n\r\n    return {\r\n        dataChart,\r\n        itemArr\r\n    };\r\n};\r\n\r\n\r\n\r\nexport const sortStatusOrder = (data) => {\r\n\r\n    const statusArr = [...data];\r\n    const inputStackData = [\r\n        'Not Started',\r\n        '1st cut of model in-progress',\r\n        '1st cut of drawing in-progress',\r\n        'Pending design',\r\n        'Consultant reviewing',\r\n        'Reject and resubmit',\r\n        'Approved with comments, to Resubmit',\r\n        'Revise In-Progress',\r\n        'Approved with Comment, no submission Required',\r\n        'Approved for Construction',\r\n    ];\r\n    let arr = [];\r\n    inputStackData.forEach(element => {\r\n        statusArr.forEach(e => {\r\n            if (element === e) arr.push(element);\r\n        });\r\n    });\r\n    if (arr.length === 0) return statusArr;\r\n    return arr;\r\n};\r\n\r\n\r\n\r\nexport const randomInteger = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\n\r\nexport const createDummyRecords = () => {\r\n\r\n    let categoryArr = [\r\n        'drawingLateApproval',\r\n        'drawingLateSubmission',\r\n        'drawingLateConstruction',\r\n        'drawingApprovedForConstruction',\r\n        'drawingApprovedWithCommentNoSubmissionRequired',\r\n        'drawingApprovedWithCommentsToResubmit',\r\n        // 'drawingReviseInProgress',\r\n        // 'drawingConsultantReviewing',\r\n        // 'drawing1stCutOfDrawingInProgress',\r\n        // 'drawingNotStarted',\r\n    ];\r\n\r\n    let recordArray = {};\r\n\r\n    categoryArr.forEach(cate => {\r\n        let arr = {};\r\n        for (let i = 0; i < 100; i++) {\r\n            arr[moment(new Date(2020, 6, 21)).add(i, 'day')._d] = randomInteger(1, 15);\r\n        };\r\n        recordArray[cate] = arr;\r\n    });\r\n\r\n    return recordArray;\r\n};\r\n\r\n\r\nconst getColumnWidth = (rows, accessor, headerText) => {\r\n    const maxWidth = 400;\r\n    const magicSpacing = 10;\r\n    const cellLength = Math.max(\r\n        ...rows.map(row => (`${row[accessor]}` || '').length),\r\n        headerText.length,\r\n    );\r\n\r\n    return Math.min(maxWidth, cellLength * magicSpacing);\r\n};\r\n\r\n\r\n\r\n\r\nconst getHeaderWidth = (header) => {\r\n\r\n    if (header === 'RFA Ref') return 270;\r\n    else if (\r\n        header === 'Block/Zone' ||\r\n        header === 'Level' || header === 'Unit/CJ' ||\r\n        header === 'Drg Type' || header === 'Use For' ||\r\n        header === 'Coordinator In Charge' || header === 'Modeller' ||\r\n        header === 'Model Progress' || header === 'Drawing Progress' ||\r\n        header === 'Construction Start'\r\n    ) return 200;\r\n    else if (header === 'Construction Issuance Date') return 220;\r\n    else if (header === 'Drawing') return 200;\r\n\r\n    else if (\r\n        header === 'Drg To Consultant (A)' ||\r\n        header === 'Drg To Consultant (T)' ||\r\n        header === 'Get Approval (A)' ||\r\n        header === 'Get Approval (T)'\r\n    ) return 220;\r\n\r\n    else if (header.includes('(A)') || header.includes('(T)')) return 190;\r\n\r\n\r\n\r\n\r\n    else if (header === 'Rev') return 150;\r\n    else if (header === 'Status') return 380;\r\n    else if (header === 'Remark') return 350;\r\n    else if (header === 'Drawing Number') return 300;\r\n    else if (header === 'Drawing Name') return 350;\r\n    else return 300;\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport const getColumnsHeader1 = (columnsIndexArray) => {\r\n\r\n    let columnsName = [\r\n        {\r\n            Header: '',\r\n            id: 'index',\r\n            accessor: (row, i) => i + 1,\r\n            width: 50,\r\n        },\r\n    ];\r\n\r\n    const filterSelect = (key) => {\r\n        if (\r\n            key === 'Status' ||\r\n            key === 'Rev' ||\r\n            key === 'Modeller' ||\r\n            key === 'Remark' ||\r\n            key === 'Coordinator In Charge' ||\r\n            key === 'Drg Type' ||\r\n            key === 'Use For' ||\r\n            key === 'Block/Zone' ||\r\n            key === 'Level' ||\r\n            key === 'Unit/CJ' ||\r\n            key === 'RFA Ref'\r\n        ) {\r\n            return true;\r\n        };\r\n    };\r\n\r\n    columnsIndexArray.forEach(hd => {\r\n        const width = getHeaderWidth(hd);\r\n\r\n        // const accessor = formatStringNameToId(hd);\r\n        const accessor = hd;\r\n\r\n        if (filterSelect(hd)) {\r\n            columnsName.push({\r\n                Header: hd,\r\n                Filter: _SelectColumnFilter,\r\n                accessor,\r\n                width,\r\n            });\r\n        } else {\r\n            columnsName.push({\r\n                Header: hd,\r\n                accessor,\r\n                width,\r\n            });\r\n        };\r\n    });\r\n    return columnsName;\r\n};\r\n\r\n\r\n\r\nexport const getHeaderSorted = (columnsData, columnsHeader) => {\r\n\r\n    let arr = [];\r\n    columnsData.forEach(headerData => {\r\n        if (headerData.Header === '') {\r\n            arr.push(headerData);\r\n            return;\r\n        };\r\n        columnsHeader.forEach(header => {\r\n            if (headerData.Header === header) arr.push(headerData);\r\n        });\r\n    });\r\n    return arr;\r\n};\r\nexport const getHeaderSorted1 = (columnsData, columnsHeader) => {\r\n    let arr = [];\r\n    columnsData.forEach(headerData => {\r\n        if (headerData.Header === '') {\r\n            arr.push(headerData);\r\n            return;\r\n        };\r\n        columnsHeader.forEach(header => {\r\n            if (headerData.Header === header) arr.push(headerData);\r\n        });\r\n    });\r\n    return arr;\r\n};\r\n\r\n\r\nexport const countAverage = (nums) => nums.reduce((a, b) => (a + b)) / nums.length;\r\n\r\n\r\nexport const recordGetAllMonth = (data, category) => {\r\n    let arr = [];\r\n    Object.keys(data[category]).forEach(item => {\r\n        arr.push(moment(item).add(-1, 'day').format('MM/YY'));\r\n    });\r\n    return [...new Set(arr)];\r\n};\r\n\r\n\r\n\r\nexport const recordDataToChartDaily = (data, category, month) => {\r\n    let arr = [];\r\n    Object.keys(data[category]).forEach(item => {\r\n        const date = moment(item).add(-1, 'day');\r\n        if (date.format('MM/YY') === month) {\r\n            arr.push({\r\n                date: date.format('DD'),\r\n                value: data[category][item]\r\n            });\r\n        };\r\n    });\r\n    return arr;\r\n};\r\n\r\n\r\nexport const recordDataToChartWeekly = (data, category) => {\r\n    let arr = [];\r\n    Object.keys(data[category]).forEach(item => {\r\n        const date = moment(item).add(-1, 'day');\r\n        arr.push({\r\n            week: date.format('W'),\r\n            month: date.format('MM'),\r\n            year: date.format('YY'),\r\n            value: data[category][item]\r\n        });\r\n    });\r\n    let groups = {};\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let weekName = `W${arr[i].week} ${arr[i].month}/${arr[i].year}`;\r\n        if (!groups[weekName]) {\r\n            groups[weekName] = [];\r\n        };\r\n        groups[weekName].push(arr[i].value);\r\n    };\r\n    let arrOutput = [];\r\n    for (let week in groups) {\r\n        arrOutput.push({ week, value: Math.round(countAverage(groups[week])) });\r\n    };\r\n    return arrOutput;\r\n};\r\n\r\n\r\nexport const recordDataToChartMonthly = (data, category) => {\r\n    let arr = [];\r\n    Object.keys(data[category]).forEach(item => {\r\n        const date = moment(item).add(-1, 'day');\r\n        arr.push({\r\n            week: date.format('W'),\r\n            month: date.format('MM'),\r\n            year: date.format('YY'),\r\n            value: data[category][item]\r\n        });\r\n    });\r\n    let groups = {};\r\n    for (let i = 0; i < arr.length; i++) {\r\n        let monthName = `${arr[i].month}/${arr[i].year}`;\r\n        if (!groups[monthName]) {\r\n            groups[monthName] = [];\r\n        };\r\n        groups[monthName].push(arr[i].value);\r\n    };\r\n    let arrOutput = [];\r\n    for (let month in groups) {\r\n        arrOutput.push({ month, value: Math.round(countAverage(groups[month])) });\r\n    };\r\n    return arrOutput;\r\n};\r\n\r\n\r\n\r\n\r\nexport const changeColumnOrder = (arr, accessor, leftOrRight, to) => {\r\n    const array = [...arr];\r\n    let cl = array.find(item => item.accessor === accessor);\r\n    const index = array.indexOf(cl);\r\n    const f = array.splice(index, 1)[0];\r\n    if (leftOrRight) {\r\n        array.splice(index + leftOrRight, 0, f);\r\n    } else {\r\n        array.splice(to, 0, f);\r\n    };\r\n    return array;\r\n};","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\assets\\constantDashboard.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\PageDashboard.js",["223","224","225","226","227","228","229","230","231","232"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\PageSpreadsheet.js",["233","234","235","236","237","238"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawing.js",["239"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanelProject.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawingLate.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarStack.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartProgress.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartPieDrawing.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellIndex.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_FormPivot.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_TableDrawingList.js",["240","241","242","243"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellHeader.js",["244","245","246","247","248","249"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\Cell.js",["250","251"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\IconTable.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\InputSearch.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelFunction.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelSetting.js",["252","253","254","255","256","257","258","259","260"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanel.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\PanelRightClick.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecordPanel.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendar.js",["261","262"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableCellHistory.js",["263","264"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableDrawingDetail.js",["265"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableActivityHistory.js",["266","267","268","269","270","271"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ReorderColumnForm.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelConfirm.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormSort.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilter.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormGroup.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormCellColorizedCheck.js",["272","273"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDrawingTypeOrder.js",["274","275"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDateAutomation.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonGroupComp.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ColorizedForm.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecord.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilterActivityHistory.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendarDuration.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonStyle.js",["276"],{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":4,"column":1,"nodeType":"283","endLine":23,"endColumn":3},{"ruleId":"284","severity":1,"message":"285","line":165,"column":33,"nodeType":"286","messageId":"287","endLine":165,"endColumn":35},{"ruleId":"284","severity":1,"message":"285","line":191,"column":19,"nodeType":"286","messageId":"287","endLine":191,"endColumn":21},{"ruleId":"288","severity":1,"message":"289","line":285,"column":7,"nodeType":"290","messageId":"291","endLine":285,"endColumn":20},{"ruleId":"288","severity":1,"message":"292","line":290,"column":7,"nodeType":"290","messageId":"291","endLine":290,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":328,"column":26,"nodeType":"286","messageId":"287","endLine":328,"endColumn":28},{"ruleId":"284","severity":1,"message":"285","line":330,"column":26,"nodeType":"286","messageId":"287","endLine":330,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":369,"column":33,"nodeType":"295","messageId":"296","endLine":369,"endColumn":88},{"ruleId":"284","severity":1,"message":"285","line":369,"column":62,"nodeType":"286","messageId":"287","endLine":369,"endColumn":64},{"ruleId":"293","severity":1,"message":"297","line":380,"column":25,"nodeType":"295","messageId":"296","endLine":380,"endColumn":80},{"ruleId":"284","severity":1,"message":"285","line":380,"column":54,"nodeType":"286","messageId":"287","endLine":380,"endColumn":56},{"ruleId":"293","severity":1,"message":"298","line":391,"column":17,"nodeType":"295","messageId":"296","endLine":391,"endColumn":66},{"ruleId":"284","severity":1,"message":"285","line":391,"column":46,"nodeType":"286","messageId":"287","endLine":391,"endColumn":48},{"ruleId":"288","severity":1,"message":"299","line":740,"column":7,"nodeType":"290","messageId":"291","endLine":740,"endColumn":23},{"ruleId":"288","severity":1,"message":"300","line":765,"column":7,"nodeType":"290","messageId":"291","endLine":765,"endColumn":29},{"ruleId":"288","severity":1,"message":"301","line":795,"column":7,"nodeType":"290","messageId":"291","endLine":795,"endColumn":28},{"ruleId":"293","severity":1,"message":"298","line":836,"column":47,"nodeType":"295","messageId":"296","endLine":836,"endColumn":94},{"ruleId":"284","severity":1,"message":"285","line":836,"column":74,"nodeType":"286","messageId":"287","endLine":836,"endColumn":76},{"ruleId":"288","severity":1,"message":"302","line":281,"column":7,"nodeType":"290","messageId":"291","endLine":281,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":109,"column":8,"nodeType":"305","endLine":109,"endColumn":10,"suggestions":"306"},{"ruleId":"307","severity":1,"message":"308","line":130,"column":25,"nodeType":"309","endLine":130,"endColumn":124},{"ruleId":"307","severity":1,"message":"308","line":131,"column":25,"nodeType":"309","endLine":131,"endColumn":99},{"ruleId":"307","severity":1,"message":"310","line":132,"column":25,"nodeType":"309","endLine":132,"endColumn":80},{"ruleId":"307","severity":1,"message":"310","line":133,"column":25,"nodeType":"309","endLine":133,"endColumn":116},{"ruleId":"307","severity":1,"message":"311","line":148,"column":37,"nodeType":"309","endLine":153,"endColumn":39},{"ruleId":"307","severity":1,"message":"312","line":157,"column":37,"nodeType":"309","endLine":161,"endColumn":39},{"ruleId":"307","severity":1,"message":"313","line":165,"column":37,"nodeType":"309","endLine":169,"endColumn":39},{"ruleId":"307","severity":1,"message":"314","line":173,"column":37,"nodeType":"309","endLine":177,"endColumn":39},{"ruleId":"307","severity":1,"message":"315","line":213,"column":21,"nodeType":"309","endLine":216,"endColumn":23},{"ruleId":"303","severity":1,"message":"316","line":84,"column":7,"nodeType":"305","endLine":84,"endColumn":9,"suggestions":"317"},{"ruleId":"303","severity":1,"message":"318","line":465,"column":7,"nodeType":"305","endLine":465,"endColumn":9,"suggestions":"319"},{"ruleId":"288","severity":1,"message":"320","line":482,"column":28,"nodeType":"290","messageId":"291","endLine":482,"endColumn":46},{"ruleId":"321","severity":1,"message":"322","line":702,"column":13,"nodeType":"323","endLine":702,"endColumn":75},{"ruleId":"324","severity":1,"message":"325","line":770,"column":19,"nodeType":"295","messageId":"326","endLine":770,"endColumn":21},{"ruleId":"324","severity":1,"message":"327","line":935,"column":33,"nodeType":"295","messageId":"328","endLine":935,"endColumn":35},{"ruleId":"288","severity":1,"message":"329","line":10,"column":7,"nodeType":"290","messageId":"291","endLine":10,"endColumn":28},{"ruleId":"288","severity":1,"message":"330","line":252,"column":11,"nodeType":"290","messageId":"291","endLine":252,"endColumn":24},{"ruleId":"303","severity":1,"message":"331","line":315,"column":8,"nodeType":"305","endLine":315,"endColumn":10,"suggestions":"332"},{"ruleId":"303","severity":1,"message":"333","line":326,"column":8,"nodeType":"305","endLine":326,"endColumn":22,"suggestions":"334"},{"ruleId":"288","severity":1,"message":"335","line":337,"column":11,"nodeType":"290","messageId":"291","endLine":337,"endColumn":24},{"ruleId":"288","severity":1,"message":"336","line":6,"column":13,"nodeType":"290","messageId":"291","endLine":6,"endColumn":22},{"ruleId":"288","severity":1,"message":"337","line":6,"column":32,"nodeType":"290","messageId":"291","endLine":6,"endColumn":39},{"ruleId":"288","severity":1,"message":"338","line":6,"column":41,"nodeType":"290","messageId":"291","endLine":6,"endColumn":52},{"ruleId":"288","severity":1,"message":"339","line":6,"column":54,"nodeType":"290","messageId":"291","endLine":6,"endColumn":77},{"ruleId":"288","severity":1,"message":"340","line":6,"column":79,"nodeType":"290","messageId":"291","endLine":6,"endColumn":90},{"ruleId":"288","severity":1,"message":"341","line":6,"column":92,"nodeType":"290","messageId":"291","endLine":6,"endColumn":101},{"ruleId":"288","severity":1,"message":"342","line":56,"column":22,"nodeType":"290","messageId":"291","endLine":56,"endColumn":34},{"ruleId":"303","severity":1,"message":"343","line":73,"column":7,"nodeType":"305","endLine":73,"endColumn":29,"suggestions":"344"},{"ruleId":"293","severity":1,"message":"298","line":674,"column":13,"nodeType":"295","messageId":"296","endLine":674,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":674,"column":42,"nodeType":"286","messageId":"287","endLine":674,"endColumn":44},{"ruleId":"293","severity":1,"message":"298","line":701,"column":13,"nodeType":"295","messageId":"296","endLine":701,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":701,"column":42,"nodeType":"286","messageId":"287","endLine":701,"endColumn":44},{"ruleId":"293","severity":1,"message":"298","line":728,"column":13,"nodeType":"295","messageId":"296","endLine":728,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":728,"column":42,"nodeType":"286","messageId":"287","endLine":728,"endColumn":44},{"ruleId":"293","severity":1,"message":"298","line":757,"column":13,"nodeType":"295","messageId":"296","endLine":757,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":757,"column":42,"nodeType":"286","messageId":"287","endLine":757,"endColumn":44},{"ruleId":"284","severity":1,"message":"345","line":770,"column":47,"nodeType":"286","messageId":"287","endLine":770,"endColumn":49},{"ruleId":"288","severity":1,"message":"346","line":5,"column":9,"nodeType":"290","messageId":"291","endLine":5,"endColumn":14},{"ruleId":"288","severity":1,"message":"347","line":5,"column":16,"nodeType":"290","messageId":"291","endLine":5,"endColumn":22},{"ruleId":"288","severity":1,"message":"348","line":20,"column":16,"nodeType":"290","messageId":"291","endLine":20,"endColumn":24},{"ruleId":"303","severity":1,"message":"349","line":43,"column":8,"nodeType":"305","endLine":43,"endColumn":10,"suggestions":"350"},{"ruleId":"303","severity":1,"message":"351","line":85,"column":7,"nodeType":"305","endLine":85,"endColumn":9,"suggestions":"352"},{"ruleId":"303","severity":1,"message":"353","line":123,"column":8,"nodeType":"305","endLine":123,"endColumn":10,"suggestions":"354"},{"ruleId":"321","severity":1,"message":"322","line":203,"column":29,"nodeType":"323","endLine":203,"endColumn":68},{"ruleId":"321","severity":1,"message":"322","line":209,"column":29,"nodeType":"323","endLine":209,"endColumn":68},{"ruleId":"321","severity":1,"message":"322","line":216,"column":29,"nodeType":"323","endLine":216,"endColumn":68},{"ruleId":"321","severity":1,"message":"322","line":222,"column":29,"nodeType":"323","endLine":222,"endColumn":69},{"ruleId":"321","severity":1,"message":"322","line":228,"column":29,"nodeType":"323","endLine":228,"endColumn":69},{"ruleId":"303","severity":1,"message":"355","line":30,"column":7,"nodeType":"305","endLine":30,"endColumn":9,"suggestions":"356"},{"ruleId":"284","severity":1,"message":"285","line":49,"column":61,"nodeType":"286","messageId":"287","endLine":49,"endColumn":63},{"ruleId":"288","severity":1,"message":"357","line":99,"column":10,"nodeType":"290","messageId":"291","endLine":99,"endColumn":17},{"ruleId":"358","severity":1,"message":"359","line":318,"column":44,"nodeType":"286","messageId":"360","endLine":318,"endColumn":45},{"ruleId":"361","severity":1,"message":"362","line":25,"column":17,"nodeType":"363","messageId":"287","endLine":25,"endColumn":23},"no-native-reassign",["364"],"no-negated-in-lhs",["365"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'getRndInteger' is assigned a value but never used.","Identifier","unusedVar","'findHeaderId' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'preSubRowLv2'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'preSubRowLv1'.","Function declared in a loop contains unsafe references to variable(s) 'preRow'.","'getParentIdHandy' is assigned a value but never used.","'returnPreRowNullSumang' is assigned a value but never used.","'returnPreRowNullHandy' is assigned a value but never used.","'getColumnWidth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'projectsArray' and 'token'. Either include them or remove the dependency array. If 'setDataDB' needs the current value of 'projectsArray', you can also switch to useReducer instead of useState and read 'projectsArray' in the reducer.","ArrayExpression",["366"],"react/jsx-pascal-case","Imported JSX component _ChartBarDrawingLate must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _ChartBarStack must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _ChartProgress must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _ChartPieDrawing must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _ChartBarDrawing must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _FormPivot must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _TableDrawingList must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'EventKeyDown'. Either include it or remove the dependency array.",["367"],"React Hook useEffect has missing dependencies: 'email', 'fetchDataOneSheet', 'getSheetRows', 'projectId', 'projectName', 'role', 'setUserData', and 'token'. Either include them or remove the dependency array.",["368"],"'setExpandColumnKey' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'getSubDrawingByStatus' is assigned a value but never used.","'scrollBarSize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'columnsHeaderSorted' and 'toggleGroupBy'. Either include them or remove the dependency array.",["369"],"React Hook useEffect has missing dependencies: 'expanded', 'maxRowExpand', and 'toggleExpanded'. Either include them or remove the dependency array.",["370"],"'panelFunction' is assigned a value but never used.","'className' is assigned a value but never used.","'columns' is assigned a value but never used.","'columnIndex' is assigned a value but never used.","'onMouseDownColumnHeader' is assigned a value but never used.","'headerIndex' is assigned a value but never used.","'container' is assigned a value but never used.","'setInitValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'columnIndex', 'inputRender', 'isLockedCell', and 'rowIndex'. Either include them or remove the dependency array.",["371"],"Expected '!==' and instead saw '!='.","'Group' is assigned a value but never used.","'Button' is assigned a value but never used.","'stateRow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'headerKey', 'projectId', 'rowId', and 'token'. Either include them or remove the dependency array.",["372"],"React Hook useEffect has missing dependencies: 'headers', 'projectId', 'rowData', 'rowId', 'stateRow.rowsVersionsToSave', and 'token'. Either include them or remove the dependency array.",["373"],"React Hook useEffect has missing dependencies: 'activityRecorded', 'dwgName', 'dwgNumber', 'headers', 'projectId', 'revKey', 'stateRow.rowsAll', 'statusKey', and 'token'. Either include them or remove the dependency array.",["374"],"React Hook useEffect has missing dependencies: 'projectId' and 'token'. Either include them or remove the dependency array.",["375"],"'fileAdd' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},"Update the dependencies array to be: [projectsArray, token]",{"range":"396","text":"397"},"Update the dependencies array to be: [EventKeyDown]",{"range":"398","text":"399"},"Update the dependencies array to be: [email, fetchDataOneSheet, getSheetRows, projectId, projectName, role, setUserData, token]",{"range":"400","text":"401"},"Update the dependencies array to be: [columnsHeaderSorted, toggleGroupBy]",{"range":"402","text":"403"},"Update the dependencies array to be: [expanded, expandedRows, maxRowExpand, toggleExpanded]",{"range":"404","text":"405"},"Update the dependencies array to be: [columnIndex, inputRender, isLockedCell, rowIndex, stateCell.cellActive]",{"range":"406","text":"407"},"Update the dependencies array to be: [headerKey, projectId, rowId, token]",{"range":"408","text":"409"},"Update the dependencies array to be: [headers, projectId, rowData, rowId, stateRow.rowsVersionsToSave, token]",{"range":"410","text":"411"},"Update the dependencies array to be: [activityRecorded, dwgName, dwgNumber, headers, projectId, revKey, stateRow.rowsAll, statusKey, token]",{"range":"412","text":"413"},"Update the dependencies array to be: [projectId, token]",{"range":"414","text":"415"},[3826,3828],"[projectsArray, token]",[2707,2709],"[EventKeyDown]",[18858,18860],"[email, fetchDataOneSheet, getSheetRows, projectId, projectName, role, setUserData, token]",[9246,9248],"[columnsHeaderSorted, toggleGroupBy]",[9584,9598],"[expanded, expandedRows, maxRowExpand, toggleExpanded]",[2429,2451],"[columnIndex, inputRender, isLockedCell, rowIndex, stateCell.cellActive]",[1284,1286],"[headerKey, projectId, rowId, token]",[2771,2773],"[headers, projectId, rowData, rowId, stateRow.rowsVersionsToSave, token]",[4982,4984],"[activityRecorded, dwgName, dwgNumber, headers, projectId, revKey, stateRow.rowsAll, statusKey, token]",[1028,1030],"[projectId, token]"]
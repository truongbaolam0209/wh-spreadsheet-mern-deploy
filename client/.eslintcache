[{"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\index.js":"1","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\App.js":"2","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\reportWebVitals.js":"3","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\cellContext.js":"4","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\rowContext.js":"5","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\projectContext.js":"6","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\_createDataContext.js":"7","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\utils\\index.js":"8","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\constants\\index.js":"9","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\utils\\functionDashboard.js":"10","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\assets\\constantDashboard.js":"11","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\PageDashboard.js":"12","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\PageSpreadsheet.js":"13","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawing.js":"14","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanelProject.js":"15","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawingLate.js":"16","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarStack.js":"17","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartProgress.js":"18","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartPieDrawing.js":"19","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellIndex.js":"20","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_FormPivot.js":"21","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_TableDrawingList.js":"22","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellHeader.js":"23","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\Cell.js":"24","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\IconTable.js":"25","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\InputSearch.js":"26","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelFunction.js":"27","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelSetting.js":"28","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanel.js":"29","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\PanelRightClick.js":"30","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecordPanel.js":"31","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendar.js":"32","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableCellHistory.js":"33","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableDrawingDetail.js":"34","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableActivityHistory.js":"35","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ReorderColumnForm.js":"36","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelConfirm.js":"37","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormSort.js":"38","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilter.js":"39","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormGroup.js":"40","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormCellColorizedCheck.js":"41","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDrawingTypeOrder.js":"42","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDateAutomation.js":"43","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonGroupComp.js":"44","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ColorizedForm.js":"45","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecord.js":"46","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilterActivityHistory.js":"47","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendarDuration.js":"48","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonStyle.js":"49","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonColumnTag.js":"50","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelPickNumber.js":"51","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ExportCSV.js":"52","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ViewTemplateSelect.js":"53","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonAdminUploadData.js":"54","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonAdminUploadDataPDD.js":"55","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonAdminUploadRows.js":"56","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelConfirmResetMode.js":"57"},{"size":507,"mtime":1614149861000,"results":"58","hashOfConfig":"59"},{"size":3062,"mtime":1615149589864,"results":"60","hashOfConfig":"59"},{"size":362,"mtime":1614149861000,"results":"61","hashOfConfig":"59"},{"size":1859,"mtime":1614149861000,"results":"62","hashOfConfig":"59"},{"size":549,"mtime":1614149861000,"results":"63","hashOfConfig":"59"},{"size":917,"mtime":1614149861000,"results":"64","hashOfConfig":"59"},{"size":590,"mtime":1614149861000,"results":"65","hashOfConfig":"59"},{"size":25967,"mtime":1615149715301,"results":"66","hashOfConfig":"59"},{"size":2430,"mtime":1615138837318,"results":"67","hashOfConfig":"59"},{"size":15538,"mtime":1614149861000,"results":"68","hashOfConfig":"59"},{"size":3472,"mtime":1615134898327,"results":"69","hashOfConfig":"59"},{"size":11618,"mtime":1614187922860,"results":"70","hashOfConfig":"59"},{"size":42303,"mtime":1615149563294,"results":"71","hashOfConfig":"59"},{"size":6282,"mtime":1614149861000,"results":"72","hashOfConfig":"59"},{"size":1063,"mtime":1614149861000,"results":"73","hashOfConfig":"59"},{"size":3911,"mtime":1614149861000,"results":"74","hashOfConfig":"59"},{"size":6160,"mtime":1614149861000,"results":"75","hashOfConfig":"59"},{"size":3173,"mtime":1614149861000,"results":"76","hashOfConfig":"59"},{"size":2866,"mtime":1614149861000,"results":"77","hashOfConfig":"59"},{"size":1633,"mtime":1615138099734,"results":"78","hashOfConfig":"59"},{"size":5489,"mtime":1614149861000,"results":"79","hashOfConfig":"59"},{"size":19584,"mtime":1614149861000,"results":"80","hashOfConfig":"59"},{"size":508,"mtime":1614149861000,"results":"81","hashOfConfig":"59"},{"size":21292,"mtime":1615145692694,"results":"82","hashOfConfig":"59"},{"size":4511,"mtime":1615137742460,"results":"83","hashOfConfig":"59"},{"size":2460,"mtime":1615137560697,"results":"84","hashOfConfig":"59"},{"size":5604,"mtime":1615142178507,"results":"85","hashOfConfig":"59"},{"size":37891,"mtime":1615142156320,"results":"86","hashOfConfig":"59"},{"size":965,"mtime":1614149861000,"results":"87","hashOfConfig":"59"},{"size":1089,"mtime":1614149861000,"results":"88","hashOfConfig":"59"},{"size":3117,"mtime":1614149861000,"results":"89","hashOfConfig":"59"},{"size":361,"mtime":1614149861000,"results":"90","hashOfConfig":"59"},{"size":2068,"mtime":1614149861000,"results":"91","hashOfConfig":"59"},{"size":5150,"mtime":1615137016945,"results":"92","hashOfConfig":"59"},{"size":11235,"mtime":1615142160788,"results":"93","hashOfConfig":"59"},{"size":3909,"mtime":1614149861000,"results":"94","hashOfConfig":"59"},{"size":1464,"mtime":1615137495872,"results":"95","hashOfConfig":"59"},{"size":3904,"mtime":1615142148320,"results":"96","hashOfConfig":"59"},{"size":7605,"mtime":1615142918805,"results":"97","hashOfConfig":"59"},{"size":4019,"mtime":1615144872417,"results":"98","hashOfConfig":"59"},{"size":3534,"mtime":1614149861000,"results":"99","hashOfConfig":"59"},{"size":33375,"mtime":1615148537320,"results":"100","hashOfConfig":"59"},{"size":4218,"mtime":1614149861000,"results":"101","hashOfConfig":"59"},{"size":722,"mtime":1615138418881,"results":"102","hashOfConfig":"59"},{"size":3504,"mtime":1614149861000,"results":"103","hashOfConfig":"59"},{"size":3126,"mtime":1614149861000,"results":"104","hashOfConfig":"59"},{"size":5267,"mtime":1614149861000,"results":"105","hashOfConfig":"59"},{"size":753,"mtime":1614149861000,"results":"106","hashOfConfig":"59"},{"size":729,"mtime":1615138392070,"results":"107","hashOfConfig":"59"},{"size":2483,"mtime":1615138443852,"results":"108","hashOfConfig":"59"},{"size":904,"mtime":1614149861000,"results":"109","hashOfConfig":"59"},{"size":2684,"mtime":1614149861000,"results":"110","hashOfConfig":"59"},{"size":4223,"mtime":1615147296940,"results":"111","hashOfConfig":"59"},{"size":1834,"mtime":1614782855524,"results":"112","hashOfConfig":"59"},{"size":1938,"mtime":1615142187290,"results":"113","hashOfConfig":"59"},{"size":1639,"mtime":1615142182158,"results":"114","hashOfConfig":"59"},{"size":2426,"mtime":1615137450878,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"utwymk",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\index.js",[],["240","241"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\App.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\reportWebVitals.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\cellContext.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\rowContext.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\projectContext.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\contexts\\_createDataContext.js",["242"],"import React, { createContext, useReducer } from 'react';\n\n\nexport default (reducer, actions, initValue) => {\n\n    const Context = createContext();\n\n    const Provider = ({ children }) => {\n        const [state, dispatch] = useReducer(reducer, initValue);\n\n        const boundActions = {};\n        for (let key in actions) {\n            boundActions[key] = actions[key](dispatch);\n        };\n\n        return (\n            <Context.Provider value={{ state, ...boundActions }}>\n                {children}\n            </Context.Provider>\n        );\n    };\n    return { Context, Provider };\n};\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\utils\\index.js",["243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\constants\\index.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\utils\\functionDashboard.js",["260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"import Axios from 'axios';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { _SelectColumnFilter } from '../componentsDashboard/_TableDrawingList';\n\n\n\n\n\n\nexport const api = Axios.create({\n   baseURL: '/api',\n   headers: {\n      'Content-Type': 'application/json'\n   }\n});\n\n\n\nexport const removeUnwantedHeaders = (columnsIndexArray) => {\n\n   const unwantedHeader = [\n      'Delta_Date',\n      'Delta_IT_CT',\n      'Delta_Issue',\n      'Delta_KTP'\n   ];\n   unwantedHeader.forEach(hd => {\n      delete columnsIndexArray[hd];\n   });\n   return columnsIndexArray;\n};\n\n\n\n\nexport const getDataConverted = (projectArray) => {\n   let dataOutput = {};\n   for (let i = 0; i < projectArray.length; i++) {\n\n      // get the column header\n      const project = projectArray[i];\n      const categoryArray = _.map(project.columns, 'title');\n      let columnsIndexArray = {};\n      categoryArray.forEach(cate => {\n         project.columns.forEach(cl => {\n            if (cl.title === cate) columnsIndexArray[cate] = cl.index;\n         });\n      });\n\n      const indexDrawingName = columnsIndexArray['Drawing Name'];\n      const indexRev = columnsIndexArray['Rev'];\n\n      let allDrawings = [];\n      let allDrawingsLatestRevision = [];\n\n      for (let i = 0; i < project.rows.length; i++) {\n         const dwg = project.rows[i];\n         if (dwg.cells[indexDrawingName].value === undefined) continue; // make sure all drawing name is keyed in\n         allDrawings.push([...dwg.cells]);\n\n         if (dwg.cells[indexRev].value === undefined) {\n            allDrawingsLatestRevision.push([...dwg.cells]);\n            continue;\n         };\n\n         let found = false;\n         for (let j = 0; j < allDrawingsLatestRevision.length; j++) {\n            if (allDrawingsLatestRevision[j][indexDrawingName].value === dwg.cells[indexDrawingName].value) {\n               found = true;\n               if (String(allDrawingsLatestRevision[j][indexRev].value) < String(dwg.cells[indexRev].value)) {\n                  allDrawingsLatestRevision.splice(j, 1);\n                  allDrawingsLatestRevision.push([...dwg.cells]);\n               };\n               break;\n            };\n         };\n         if (!found) allDrawingsLatestRevision.push([...dwg.cells]);\n      };\n\n      dataOutput[project.name.slice(0, project.name.length - 17)] = {\n         columnsIndexArray: removeUnwantedHeaders(columnsIndexArray),\n         allDrawings,\n         allDrawingsLatestRevision\n      };\n   };\n   return dataOutput;\n};\n\n\n\nexport const getAllDrawingSameValueInOneColumn = (data, column, dataType) => {\n\n   const { columnsIndexArray, allDrawings, allDrawingsLatestRevision } = data;\n\n   const drawings = dataType === 'all' ? allDrawings : allDrawingsLatestRevision;\n   const indexCategory = columnsIndexArray[column];\n\n   let drawingCount = {};\n   let drawingList = {};\n\n   drawings.forEach(dwg => {\n      const { value } = dwg[indexCategory];\n\n      drawingCount[value] = (drawingCount[value] || 0) + 1;\n      drawingList[value] = [...drawingList[value] || [], dwg];\n   });\n\n   return {\n      drawingCount,\n      drawingList\n   };\n};\n\n\n\nexport const getDrawingLateNow = (data, type) => {\n\n   const { allDrawingsLatestRevision, columnsIndexArray } = data;\n\n   const dwgsLateNow = [];\n   const columnHeader = type === 'getApproval' ? 'get Approval'\n      : type === 'drgToConsultant' ? 'Drg to Consultant' : null;\n\n   allDrawingsLatestRevision.forEach(dwg => {\n      const status = dwg[columnsIndexArray['Status']].value;\n      // make sure drawing is not approved or consultant reviewing\n      if (status && (status.includes('Approved') || status === 'Consultant reviewing')) return;\n\n      const dateT = dwg[columnsIndexArray[`${columnHeader} (T)`]].value;\n      const dateA = dwg[columnsIndexArray[`${columnHeader} (A)`]].value;\n      if (dateT === undefined || dateA !== undefined) return;\n\n      const diff = moment(dateT).diff(moment(), 'days');\n      if (diff < 0) dwgsLateNow.push([...dwg]);\n   });\n   return dwgsLateNow;\n};\n\nexport const getDrawingLateNow1 = (drawings, type) => {\n\n   const dwgsLateNow = [];\n   drawings.forEach(dwg => {\n      const status = dwg['Status'];\n      // make sure drawing is not approved or consultant reviewing\n      if (status && (status.includes('Approved') || status === 'Consultant reviewing')) return;\n\n      const dateT = dwg[`${type} (T)`];\n      const dateA = dwg[`${type} (A)`];\n      if (dateT === undefined || dateA !== undefined) return;\n\n      const diff = moment(dateT).diff(moment(), 'days');\n      if (diff < 0) dwgsLateNow.push(dwg);\n   });\n   return dwgsLateNow;\n};\n\n\n\nexport const mergeUndefined = ({ drawingCount, drawingList }, mergeWith, columnsIndexArray, columnHeader) => {\n   if (drawingCount['undefined'] === undefined) return;\n\n   drawingCount[mergeWith] = (drawingCount[mergeWith] || 0) + drawingCount['undefined'];\n   delete drawingCount['undefined'];\n\n   drawingList[mergeWith] = [...drawingList[mergeWith] || [], ...drawingList['undefined']];\n   delete drawingList['undefined'];\n\n   return {\n      drawingCount,\n      drawingList\n   };\n};\n\n\nexport const formatStringNameToId = (str) => {\n   let mystring = str.replace(/ /g, '').replace(/\\(|\\)/g, '');\n   return mystring.charAt(0).toLowerCase() + mystring.slice(1);\n};\n\n\nexport const pickDataToTable = (drawings, columnsIndexArray) => {\n   let arr = [];\n   drawings.forEach(dwg => {\n      let obj = {};\n      Object.keys(columnsIndexArray).forEach(header => {\n         obj[formatStringNameToId(header)] = dwg[columnsIndexArray[header]].value || '. ';\n      });\n      arr.push(obj);\n   });\n   return arr;\n};\n\n\nexport const convertDataToStackedChart = (data) => {\n   let dataChart = [];\n   let allKeys = [];\n   data && Object.keys(data).forEach(project => {\n      const { drawingCount } = mergeUndefined(getAllDrawingSameValueInOneColumn(data[project], 'Status'), 'Not Started');\n      dataChart.push({ ...drawingCount, name: project });\n      allKeys = [...allKeys, ...Object.keys(drawingCount)];\n   });\n   const itemArr = [...new Set(allKeys)];\n\n   itemArr.forEach(key => {\n      dataChart.forEach(projectData => {\n         if (key in projectData) return;\n         projectData[key] = 0;\n      });\n   });\n\n   return {\n      dataChart,\n      itemArr\n   };\n};\n\n\n\nexport const sortStatusOrder = (data) => {\n\n   const statusArr = [...data];\n   const inputStackData = [\n      'Not Started',\n      '1st cut of model in-progress',\n      '1st cut of drawing in-progress',\n      'Pending design',\n      'Consultant reviewing',\n      'Reject and resubmit',\n      'Approved with comments, to Resubmit',\n      'Revise In-Progress',\n      'Approved with Comment, no submission Required',\n      'Approved for Construction',\n   ];\n   let arr = [];\n   inputStackData.forEach(element => {\n      statusArr.forEach(e => {\n         if (element === e) arr.push(element);\n      });\n   });\n   if (arr.length === 0) return statusArr;\n   return arr;\n};\n\n\n\nexport const randomInteger = (min, max) => {\n   return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n\nexport const createDummyRecords = () => {\n\n   let categoryArr = [\n      'Drawing Approved For Construction',\n      'Drawing Approved With Comments To Resubmit',\n      'Drawing Late For Approval',\n      'Drawing Late For Submission',\n      'Drawing Late For Construction',\n   ];\n\n   let recordArray = {};\n\n   categoryArr.forEach(cate => {\n      let arr = {};\n      if (cate === 'Drawing Late For Approval' || cate === 'Drawing Late For Submission') {\n         for (let i = 0; i < 100; i++) {\n            if (i % 3 == 0) {\n               arr[moment(new Date(2020, 6, 21)).add(i, 'day')._d] = 0;\n            } else {\n               arr[moment(new Date(2020, 6, 21)).add(i, 'day')._d] = randomInteger(0, 1);\n            };\n         };\n\n      } else if (cate === 'Drawing Late For Construction') {\n\n         for (let i = 0; i < 100; i++) {\n            if (i % 3 == 0) {\n               arr[moment(new Date(2020, 6, 21)).add(i, 'day')._d] = 0;\n            } else {\n               arr[moment(new Date(2020, 6, 21)).add(i, 'day')._d] = randomInteger(0, 2);\n            };\n         };\n\n      } else {\n\n         for (let i = 0; i < 100; i++) {\n            if (i % 3 == 0) {\n               arr[moment(new Date(2020, 6, 21)).add(i, 'day')._d] = 1;\n            } else {\n               arr[moment(new Date(2020, 6, 21)).add(i, 'day')._d] = randomInteger(1, 4);\n            };\n         };\n      };\n      recordArray[cate] = arr;\n   });\n   return recordArray;\n};\n\n\nconst getColumnWidth = (rows, accessor, headerText) => {\n   const maxWidth = 400;\n   const magicSpacing = 10;\n   const cellLength = Math.max(\n      ...rows.map(row => (`${row[accessor]}` || '').length),\n      headerText.length,\n   );\n\n   return Math.min(maxWidth, cellLength * magicSpacing);\n};\n\n\n\n\nconst getHeaderWidth = (header) => {\n\n   if (header === 'RFA Ref') return 270;\n   else if (\n      header === 'Block/Zone' ||\n      header === 'Level' || header === 'Unit/CJ' ||\n      header === 'Drg Type' || header === 'Use For' ||\n      header === 'Coordinator In Charge' || header === 'Modeller' ||\n      header === 'Model Progress' || header === 'Drawing Progress' ||\n      header === 'Construction Start'\n   ) return 200;\n   else if (header === 'Construction Issuance Date') return 220;\n   else if (header === 'Drawing') return 200;\n\n   else if (\n      header === 'Drg To Consultant (A)' ||\n      header === 'Drg To Consultant (T)' ||\n      header === 'Get Approval (A)' ||\n      header === 'Get Approval (T)'\n   ) return 220;\n\n   else if (header.includes('(A)') || header.includes('(T)')) return 190;\n\n\n\n\n   else if (header === 'Rev') return 150;\n   else if (header === 'Status') return 380;\n   else if (header === 'Remark') return 350;\n   else if (header === 'Drawing Number') return 300;\n   else if (header === 'Drawing Name') return 350;\n   else return 300;\n\n};\n\n\n\n\nexport const getColumnsHeader1 = (columnsIndexArray) => {\n\n   let columnsName = [\n      {\n         Header: '',\n         id: 'index',\n         accessor: (row, i) => i + 1,\n         width: 50,\n      },\n   ];\n\n   const filterSelect = (key) => {\n      if (\n         key === 'Status' ||\n         key === 'Rev' ||\n         key === 'Modeller' ||\n         key === 'Remark' ||\n         key === 'Coordinator In Charge' ||\n         key === 'Drg Type' ||\n         key === 'Use For' ||\n         key === 'Block/Zone' ||\n         key === 'Level' ||\n         key === 'Unit/CJ' ||\n         key === 'RFA Ref'\n      ) {\n         return true;\n      };\n   };\n\n   columnsIndexArray.forEach(hd => {\n      const width = getHeaderWidth(hd);\n\n      // const accessor = formatStringNameToId(hd);\n      const accessor = hd;\n\n      if (filterSelect(hd)) {\n         columnsName.push({\n            Header: hd,\n            Filter: _SelectColumnFilter,\n            accessor,\n            width,\n         });\n      } else {\n         columnsName.push({\n            Header: hd,\n            accessor,\n            width,\n         });\n      };\n   });\n   return columnsName;\n};\n\n\n\nexport const getHeaderSorted = (columnsData, columnsHeader) => {\n\n   let arr = [];\n   columnsData.forEach(headerData => {\n      if (headerData.Header === '') {\n         arr.push(headerData);\n         return;\n      };\n      columnsHeader.forEach(header => {\n         if (headerData.Header === header) arr.push(headerData);\n      });\n   });\n   return arr;\n};\nexport const getHeaderSorted1 = (columnsData, columnsHeader) => {\n   let arr = [];\n   columnsData.forEach(headerData => {\n      if (headerData.Header === '') {\n         arr.push(headerData);\n         return;\n      };\n      columnsHeader.forEach(header => {\n         if (headerData.Header === header) arr.push(headerData);\n      });\n   });\n   return arr;\n};\n\n\nexport const countAverage = (nums) => nums.reduce((a, b) => (a + b)) / nums.length;\n\n\nexport const recordGetAllMonth = (data, category) => {\n   let arr = [];\n   Object.keys(data[category]).forEach(item => {\n      arr.push(moment(item).add(-1, 'day').format('MM/YY'));\n   });\n   return [...new Set(arr)];\n};\n\n\nfunction getRandomInt(min, max) {\n   min = Math.ceil(min);\n   max = Math.floor(max);\n   return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n};\nexport const recordDataToChartDaily = (data, category, month) => {\n   let arr = [];\n   Object.keys(data[category]).forEach((item, i) => {\n\n      const addNos = i % 3 == 0 ? -1 \n         : i % 2 == 0 ? 1\n         : i % 5 == 0 ? 2 : 0;\n\n      const date = moment(item).add(-1, 'day');\n      if (date.format('MM/YY') === month) {\n         arr.push({\n            date: date.format('DD'),\n            value: data[category][item],\n            target: data[category][item] + addNos\n         });\n      };\n   });\n   return arr;\n};\n\n\nexport const recordDataToChartWeekly = (data, category) => {\n   let arr = [];\n   Object.keys(data[category]).forEach((item, i) => {\n      \n      const addNos = i % 3 == 0 ? -1 \n         : i % 5 == 0 ? 1\n         : i % 7 == 0 ? 2 : 0;\n\n      const date = moment(item).add(-1, 'day');\n      arr.push({\n         week: date.format('W'),\n         month: date.format('MM'),\n         year: date.format('YY'),\n         value: data[category][item],\n         target: data[category][item] + addNos\n      });\n   });\n\n   let groups = {};\n   for (let i = 0; i < arr.length; i++) {\n      let weekName = `W${arr[i].week} ${arr[i].month}/${arr[i].year}`;\n      groups[weekName] = {};\n   };\n   \n\n   for (let i = 0; i < arr.length; i++) {\n      let weekName = `W${arr[i].week} ${arr[i].month}/${arr[i].year}`;\n      groups[weekName].value = [...groups[weekName].value || [], arr[i].value];\n      groups[weekName].target = [...groups[weekName].target || [], arr[i].target];\n   };\n\n   let arrOutput = [];\n   for (let week in groups) {\n      arrOutput.push({ \n         week, \n         value: groups[week].value.reduce((a, b) => a + b, 0),\n         target: groups[week].target.reduce((a, b) => a + b, 0),\n      });\n   };\n   return arrOutput;\n};\n\n\nexport const recordDataToChartMonthly = (data, category) => {\n   let arr = [];\n   Object.keys(data[category]).forEach((item, i) => {\n\n      const addNos = i % 4 == 0 ? -4 \n         : i % 3 == 0 ? 3\n         : i % 2 == 0 ? 2 : 0;\n\n      const date = moment(item).add(-1, 'day');\n      arr.push({\n         week: date.format('W'),\n         month: date.format('MM'),\n         year: date.format('YY'),\n         value: data[category][item],\n         target: data[category][item] + getRandomInt(-3, 3)\n      });\n   });\n   let groups = {};\n   for (let i = 0; i < arr.length; i++) {\n      let monthName = `${arr[i].month}/${arr[i].year}`;\n      groups[monthName] = {};\n   };\n\n   for (let i = 0; i < arr.length; i++) {\n      let monthName = `${arr[i].month}/${arr[i].year}`;\n      groups[monthName].value = [...groups[monthName].value || [], arr[i].value];\n      groups[monthName].target = [...groups[monthName].target || [], arr[i].target];\n   };\n\n   let arrOutput = [];\n   for (let month in groups) {\n      arrOutput.push({ \n         month, \n         value: groups[month].value.reduce((a, b) => a + b, 0),\n         target: groups[month].target.reduce((a, b) => a + b, 0),\n      });\n   };\n   return arrOutput;\n};\n\n\n\n\nexport const changeColumnOrder = (arr, accessor, leftOrRight, to) => {\n   const array = [...arr];\n   let cl = array.find(item => item.accessor === accessor);\n   const index = array.indexOf(cl);\n   const f = array.splice(index, 1)[0];\n   if (leftOrRight) {\n      array.splice(index + leftOrRight, 0, f);\n   } else {\n      array.splice(to, 0, f);\n   };\n   return array;\n};","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\assets\\constantDashboard.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\PageDashboard.js",["274","275","276","277","278","279","280","281","282","283"],"import { Col, Divider, Modal, Row, Skeleton } from 'antd';\nimport Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from './assets/constantDashboard';\nimport CardPanelProject from './componentsDashboard/CardPanelProject';\nimport _ChartBarDrawing from './componentsDashboard/_ChartBarDrawing';\nimport _ChartBarDrawingLate from './componentsDashboard/_ChartBarDrawingLate';\nimport _ChartBarStack from './componentsDashboard/_ChartBarStack';\nimport _ChartPieDrawing from './componentsDashboard/_ChartPieDrawing';\nimport _ChartProgress from './componentsDashboard/_ChartProgress';\nimport _FormPivot from './componentsDashboard/_FormPivot';\nimport _TableDrawingList from './componentsDashboard/_TableDrawingList';\nimport { createDummyRecords } from './utils/functionDashboard';\n\n\n\n\nconst convertDataFromDB = (data, projectsArray) => {\n\n   let output = {};\n   data.forEach(projectData => {\n      let { publicSettings: { headers, drawingTypeTree }, rows: rowsAllInProject, _id } = projectData;\n\n      let rows = [];\n      const wohhupNode = drawingTypeTree.find(x => x['Drawing Number'] === 'Woh Hup Private Ltd');\n      if (wohhupNode) {\n         const wohhupAllNodes = getTreeFlattenOfNodeInArray(drawingTypeTree, wohhupNode);\n         wohhupAllNodes.forEach(node => {\n            rows = [...rows, ...rowsAllInProject.filter(x => x._parentRow === node.id)];\n         });\n      };\n\n\n      if (rows.length <= 20) return;\n\n      let projectName = projectsArray.find(dt => dt.id === _id).name;\n\n      let headersArr = headers.map(hd => hd.text);\n\n      rows.forEach(r => {\n         if (!r.Rev) r.Rev = '0';\n         if (!r.Status) r.Status = 'Not Started';\n      });\n\n      const getUniqueValueByColumns = (rows, header) => {\n         let valueArr = [];\n         rows.forEach(row => valueArr.push(row[header]));\n         return [...new Set(valueArr)];\n      };\n      let revArr = getUniqueValueByColumns(rows, 'Rev');\n      let inputStack = getUniqueValueByColumns(rows, 'Status');\n      let drawingCountSubStatus = [];\n      let drawingListSubStatus = {};\n      revArr.forEach(rev => {\n         let rowsFilter = rows.filter(r => r['Rev'] === rev);\n         let obj = {};\n         let objDwgs = {};\n         rowsFilter.forEach(r => {\n            obj[r.Status] = (obj[r.Status] || 0) + 1;\n            objDwgs[r.Status] = [...objDwgs[r.Status] || [], r];\n         });\n         obj.name = rev;\n         drawingCountSubStatus.push(obj);\n         drawingListSubStatus[rev] = objDwgs;\n      });\n\n\n      let drawingCountStatus = {};\n      let drawingsListStatus = {};\n      inputStack.forEach(stt => {\n         let rrrArr = rows.filter(r => r.Status === stt);\n         rrrArr.forEach(r => {\n            drawingCountStatus[stt] = (drawingCountStatus[stt] || 0) + 1;\n         });\n         drawingsListStatus[stt] = rrrArr;\n      });\n      const dataPieChartStatus = Object.keys(drawingCountStatus).map(key => ({ name: key, value: drawingCountStatus[key] }));\n\n      output[projectName] = {\n         rowsAll: rows,\n         drawingCountSubStatus,\n         drawingListSubStatus,\n         inputStack,\n         headers: headersArr,\n         drawingCountStatus,\n         drawingsListStatus,\n         dataPieChartStatus,\n         projectsCount: data.length\n      };\n   });\n\n   return output;\n};\n\n\nconst PageDashboard = ({ projectsArray, token }) => {\n\n   const [dataDB, setDataDB] = useState(null);\n   const [loading, setLoading] = useState(false);\n   const [dummy, setDummy] = useState({});\n\n\n   useEffect(() => {\n\n      const loadData = async () => {\n         setLoading(true);\n         try {\n            setDummy(dummyData);\n\n            const resDB = await Axios.post(`${SERVER_URL}/sheet/find-many`, { token, sheetIds: projectsArray.map(x => x.id) });\n            setDataDB(convertDataFromDB(resDB.data, projectsArray));\n\n            setLoading(false);\n\n         } catch (err) {\n            console.log(err);\n            setLoading(false);\n         };\n      };\n      loadData();\n   }, []);\n\n\n\n   const [_drawingTableVisible, set_DrawingTableVisible] = useState(false);\n   const [_drawingTableData, set_DrawingTableData] = useState(null);\n   const _openDrawingTable = (projectName, title, drawings, headers, columnsHeaderSorted, isSelectedShownOnly) => {\n      set_DrawingTableData({ projectName, title, drawings, headers, columnsHeaderSorted, isSelectedShownOnly });\n      set_DrawingTableVisible(true);\n   };\n   const _closeTableAndReset = () => {\n      set_DrawingTableVisible(false);\n      set_DrawingTableData(null);\n   };\n\n\n   return (\n      <div style={{ marginTop: 15 }}>\n         <Row justify='space-around' style={{ margin: '25px 0 5px 0' }}>\n            {dataDB && Object.keys(dataDB).length > 1 && (\n               <>\n                  <_ChartBarDrawingLate data={dummy.dummyLateConstruction} title='No Of Drawing Late Construction' />\n                  <_ChartBarDrawingLate data={dataDB} title='No Of Drawing Late Approval' />\n                  <_ChartBarStack data={dataDB} title='Drawing Status' />\n                  <_ChartBarStack data={dummy.productivityDummy} title='Productivity - (days per drawing)' />\n               </>\n            )}\n         </Row>\n\n         {!loading && dataDB ? (\n            <div style={{ padding: '0 12px' }}>\n               {Object.keys(dataDB).map(projectName => {\n                  return (\n                     <CardPanelProject\n                        title={projectName.toUpperCase()}\n                        key={projectName}\n                        projectsCount={dataDB[projectName].projectsCount}\n                     >\n                        <ChartPanel title='Overdue submissions'>\n                           <_ChartProgress\n                              data={dataDB[projectName]}\n                              openDrawingTable={_openDrawingTable}\n                              projectName={projectName}\n\n                           />\n                        </ChartPanel>\n\n                        <ChartPanel title='Drawing Status'>\n                           <_ChartPieDrawing\n                              data={dataDB[projectName]}\n                              openDrawingTable={_openDrawingTable}\n                              projectName={projectName}\n                           />\n                        </ChartPanel>\n\n                        <ChartPanel title='Nos of drawing per revision'>\n                           <_ChartBarDrawing\n                              data={dataDB[projectName]}\n                              openDrawingTable={_openDrawingTable}\n                              projectName={projectName}\n                           />\n                        </ChartPanel>\n\n                        <ChartPanel title='Sorted table by category'>\n                           <_FormPivot\n                              data={dataDB[projectName]}\n                              openDrawingTable={_openDrawingTable}\n                              projectName={projectName}\n                              dataRecordedDummy={createDummyRecords()}\n                           />\n                        </ChartPanel>\n\n                     </CardPanelProject>\n                  )\n               })}\n\n            </div>\n         ) : <SkeletonCard />}\n\n\n         {_drawingTableData && (\n            <Modal\n               title={_drawingTableData.projectName}\n               visible={_drawingTableVisible}\n               footer={false}\n               onCancel={_closeTableAndReset}\n               width={0.9 * window.innerWidth}\n               height={0.7 * window.innerHeight}\n               // centered={true}\n               style={{\n                  // justifyContent: 'center',\n                  // alignItems: 'center'\n               }}\n               bodyStyle={{\n                  paddingTop: 10\n               }}\n            >\n               <div style={{ display: 'flex' }}>\n                  <h3 style={{ padding: '0 0 10px 0' }}>{_drawingTableData.title.type}</h3>\n                  <Divider type='vertical' style={{ height: 25 }} />\n                  <h3 style={{ padding: '0 10px' }}>{_drawingTableData.title.category}</h3>\n                  <Divider type='vertical' style={{ height: 25 }} />\n                  <h3 style={{ padding: '0 10px' }}>{_drawingTableData.drawings.length + ' drawings'}</h3>\n               </div>\n\n               <_TableDrawingList\n                  data={_drawingTableData}\n                  title={_drawingTableData.title}\n               />\n\n            </Modal>\n         )}\n      </div>\n\n   );\n};\n\nexport default PageDashboard;\n\n\n\nconst ChartPanel = ({ title, children }) => {\n   return (\n      <Col style={{ marginBottom: 10 }} xs={24} md={12} xl={6}>\n         <div style={{ fontSize: '18px', textAlign: 'center', fontWeight: 'bold' }}>{title}</div>\n         {children}\n      </Col>\n   );\n};\n\n\nconst SkeletonCard = () => {\n   return (\n      <div style={{ padding: '0 12px' }}>\n         <CardPanelProject title='Project loading ...'>\n            <div style={{ padding: '0 3px' }}>\n               <Skeleton paragraph={{ rows: 14 }} active />\n            </div>\n         </CardPanelProject>\n      </div>\n   );\n};\n\n\n\nconst dummyData = {\n   productivityDummy: {\n      inputData: [\n         {\n            // 'Consultant review and reply': 4,\n            // 'Create update drawing': 3,\n            // 'Create update model': 7,\n            // 'name': 'Sumang',\n            'Consultant review and reply': 4,\n            'Create update drawing': 3,\n            'Create update model': 7,\n            'name': 'Sumang'\n         },\n         {\n            // 'Consultant review and reply': 5,\n            // 'Create update drawing': 4,\n            // 'Create update model': 6,\n            // 'name': 'Handy',\n            'Consultant review and reply': 5,\n            'Create update drawing': 4,\n            'Create update model': 6,\n            'name': 'Handy',\n         }\n      ],\n      inputStack: ['Consultant review and reply', 'Create update drawing', 'Create update model']\n   },\n   dummyLateConstruction: [\n      // { name: 'Handy', value: 6 },\n      // { name: 'Sumang', value: 15 },\n      { name: 'Handy', value: 8 },\n      { name: 'Sumang', value: 13 },\n   ]\n};\n\n\nexport const flattenAllTreeChildNode1 = (root) => {\n   let temp = [];\n   let queue = [...root];\n   while (queue.length > 0) {\n      let node = queue.shift();\n      if (node.children) {\n         let childNode = [];\n         node.children.forEach(nd => {\n            childNode.push({ ...nd, parentId: node.id });\n         });\n         queue = [...queue, ...childNode];\n         let nodeObj = { ...node };\n         delete nodeObj.children;\n         temp.push(nodeObj);\n      } else {\n         let nodeObj = { ...node };\n         delete nodeObj.children;\n         temp.push(nodeObj);\n      };\n   };\n   return temp;\n};\n\nconst getListOfBranchesTree = (inputArr) => {\n   const arr = inputArr.map(x => ({ ...x }));\n   arr.sort((a, b) => { return b.treeLevel - a.treeLevel });\n\n   const parentArrIds = [];\n   arr.forEach(x => {\n      let item = arr.find(fld => fld.id === x.parentId);\n      if (item) {\n         item.children = [...item.children || [], x];\n      } else {\n         parentArrIds.push(x.id);\n      };\n   });\n   return arr.filter(x => parentArrIds.indexOf(x.id) !== -1);\n};\nconst getTreeFlattenOfNodeInArray = (treeArray, node) => {\n   let obj = { ...node };\n   let arrayTree = treeArray.map(x => ({ ...x })).filter(x => x.treeLevel > obj.treeLevel);\n   arrayTree = [...arrayTree, obj];\n   const treeOfFound = getListOfBranchesTree(arrayTree).find(x => x.id === obj.id);\n   return flattenAllTreeChildNode1([treeOfFound]);\n};\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\PageSpreadsheet.js",["284","285","286","287","288"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawing.js",["289"],"import { Badge } from 'antd';\nimport React, { useState } from 'react';\nimport { Bar, BarChart, CartesianGrid, LabelList, Tooltip, XAxis, YAxis } from 'recharts';\nimport styled from 'styled-components';\nimport { pieChartColors2 } from '../assets/constantDashboard';\nimport { getAllDrawingSameValueInOneColumn, sortStatusOrder } from '../utils/functionDashboard';\n\n\n\nconst getSubDrawingByStatus = (drawingList, columnsIndexArray) => {\n\n    let drawingCountSubStatus = [];\n    let drawingListSubStatus = {};\n    let inputStack = [];\n\n    for (const key in drawingList) {\n        const result = getAllDrawingSameValueInOneColumn({\n            allDrawingsLatestRevision: drawingList[key],\n            columnsIndexArray\n        }, 'Status');\n\n        const drawingCountArr = result.drawingCount;\n        const drawingListArr = result.drawingList;\n\n\n        if ('undefined' in drawingCountArr) {\n            drawingCountArr['Not Started'] = drawingCountArr['undefined'] + drawingCountArr['Not Started'] || 0;\n            delete drawingCountArr['undefined'];\n        };\n\n        if ('undefined' in drawingListArr) {\n            drawingListArr['Not Started'] = [...drawingListArr['undefined'], drawingListArr['Not Started'] || []];\n            delete drawingListArr['undefined'];\n        };\n\n        for (const key in drawingCountArr) {\n            if (key !== 'undefined') inputStack.push(key);\n        };\n\n        drawingCountArr['name'] = key;\n        drawingCountSubStatus.push(drawingCountArr);\n        drawingListSubStatus[key] = drawingListArr;\n    };\n\n    return {\n        drawingCountSubStatus,\n        drawingListSubStatus,\n        inputStack: [...new Set(inputStack)]\n    };\n};\n\n\nconst _ChartBarDrawing = ({ data, openDrawingTable, projectName }) => {\n\n    const { drawingCountSubStatus, drawingListSubStatus, inputStack, headers } = data;\n\n\n    const onClick = (e, item) => {\n        openDrawingTable(\n            projectName,\n            { type: 'Drawings by revision', category: `Revision: ${e.name} - Status: ${item}` },\n            drawingListSubStatus[e.name][item],\n            headers\n        );\n    };\n\n    const LabelCustomStacked = (props) => {\n        const { x, y, value, height } = props;\n        const fontSize = 13;\n        return (\n            <text\n                style={{ fontSize: fontSize, boxShadow: '5px 15px 24px 5px black', }}\n                x={x + 24}\n                y={y + height / 2}\n                fill='#2c3e50'\n                dominantBaseline='central'\n            >\n                {height + 3 < fontSize ? null : value}\n            </text>\n        );\n    };\n\n    const LabelCustomStackedTotal = (props) => {\n        const { x, y, value, topBar } = props;\n        return (\n            <>\n                <text\n                    style={{ fontSize: 17, fontWeight: 'bold' }}\n                    x={x - 2}\n                    y={y - 10}\n                    fill='black'\n                    dominantBaseline='central'\n\n                >\n                    {topBar ? value : null}\n                </text>\n            </>\n        );\n    };\n    const [tooltip, setTooltip] = useState(false);\n    const TooltipCustom = (props) => {\n        const { active, payload } = props;\n        if (!active || !tooltip) return null;\n        for (const bar of payload)\n            if (bar.dataKey === tooltip) {\n                return (\n                    <div style={{\n                        backgroundColor: 'white',\n                        color: bar.fill,\n                        fontSize: 14,\n                        border: `1px solid ${bar.fill}`,\n                        padding: '3px',\n                        maxWidth: '170px'\n                    }}>\n                        {bar.name}\n                        <br />\n                        <mark style={{ backgroundColor: bar.fill }}>\n                            ({bar.value})\n                        </mark>\n                    </div>\n                );\n            };\n        return null;\n    };\n\n\n    return (\n        <div style={{ margin: '0 auto', display: 'table' }}>\n            <BarChart\n                width={350}\n                height={350}\n                data={drawingCountSubStatus.sort((a, b) => {\n                    if (a.name < b.name) return -1;\n                    if (a.name > b.name) return 1;\n                    return 0;\n                })}\n                margin={{ top: 35, right: 15, left: 0, bottom: 20 }}\n                padding={{ top: 5 }}\n                barSize={23}\n            >\n                <CartesianGrid strokeDasharray='3 3' />\n                <XAxis tickSize={3} dataKey='name' textAnchor='middle' interval={0} scale='point' padding={{ left: 35, right: 35 }} />\n                <YAxis />\n                <Tooltip content={<TooltipCustom />} />\n                {sortStatusOrder(inputStack).map((item, i) => {\n                    return (\n                        <Bar\n                            key={item}\n                            dataKey={item}\n                            stackId='a'\n                            fill={pieChartColors2[item]}\n                            isAnimationActive={false}\n                            onClick={(e) => onClick(e, item)}\n                            onMouseOver={() => setTooltip(item)}\n                            label={<LabelCustomStackedTotal topBar={i === inputStack.length - 1} />}\n                        >\n                            <LabelList dataKey={item} position='left' content={<LabelCustomStacked item={item} />} />\n                        </Bar>\n                    )\n                })}\n\n            </BarChart>\n\n            <div style={{ paddingLeft: 50, height: 180 }}>\n\n                {sortStatusOrder(inputStack).reverse().map((key, i) => (\n                    <div key={key} style={{ display: 'flex' }}>\n                        <StyledBadge\n                            size='small'\n                            color={pieChartColors2[key]}\n                            text={key}\n                        />\n                    </div>\n                ))}\n                \n            </div>\n        </div>\n\n    );\n};\n\nexport default _ChartBarDrawing;\n\nconst StyledBadge = styled(Badge)`\n    .ant-badge-status-dot {\n        width: 15px;\n        height: 15px;\n        border-radius: 0;\n    }\n`;\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanelProject.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarDrawingLate.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartBarStack.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartProgress.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_ChartPieDrawing.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellIndex.js",["290"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_FormPivot.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\_TableDrawingList.js",["291","292","293","294"],"import { Button, Icon, Input } from 'antd';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n    useBlockLayout,\n    useColumnOrder,\n    useExpanded,\n    useFilters,\n    useFlexLayout,\n    useGlobalFilter,\n    useGroupBy,\n    useResizeColumns,\n    useRowSelect,\n    useSortBy,\n    useTable\n} from 'react-table';\nimport { FixedSizeList } from 'react-window';\nimport styled from 'styled-components';\nimport { colorType } from '../assets/constantDashboard';\nimport { changeColumnOrder, formatStringNameToId, getColumnsHeader1, getHeaderSorted1 } from '../utils/functionDashboard';\nimport PanelRightClick from './PanelRightClick';\n\n\n\nconst scrollbarWidth = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.setAttribute(\n        'style',\n        'width: 100px; height: 100px; overflow: scroll; position: absolute; top: -9999px;'\n    );\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n};\n\nconst headerProps = (props, { column }) => {\n    return getStyles(props, column.align);\n};\n\nconst checkCellFix = (cell) => (\n    !cell.isAggregated &&\n    !cell.isGrouped &&\n    cell.isRepeatedValue &&\n    cell.row.subRows.length !== 0 &&\n    // cell.row.depth === 0\n    cell.row.groupByID !== cell.column.id\n);\n\nconst cellProps = (props, { cell }) => {\n\n    const colorFix = checkCellFix(cell) && '#f6e58d';\n\n    props.style.background = colorFix || (cell.isGrouped ? '#7ed6df' :\n        cell.isAggregated ? '#f6e58d' :\n            cell.isPlaceholder ? '#ff000042' :\n                'white');\n    return getStyles(props, cell.column.align);\n};\n\nconst getStyles = (props, align = 'left') => [props,\n    {\n        style: {\n            justifyContent: align === 'right' ? 'flex-end' : 'flex-start',\n            alignItems: 'flex-start',\n            display: 'flex',\n        },\n    },\n];\n\nconst headerWithNoGroupFunction = (column) => {\n    const arr = [\n        'Drawing Number', 'Drawing Name'\n    ];\n    return arr.indexOf(column) !== -1;\n};\n\nexport const DefaultColumnFilter = ({\n    column: { filterValue, preFilteredRows, setFilter },\n}) => {\n    const count = preFilteredRows.length;\n\n    const [btnActive, setBtnActive] = useState(false);\n    const toggleBtn = () => {\n        setBtnActive(!btnActive);\n        setFilter(undefined);\n    };\n\n    return (\n        <div style={{ display: 'flex' }}>\n            <div onClick={toggleBtn} style={{ cursor: 'pointer' }}>\n                {btnActive ? <IconTable type='search' color='green' /> : <IconTable type='search' />}\n            </div>\n            {btnActive && (\n                <input\n                    value={filterValue || ''}\n                    onChange={e => {\n                        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n                    }}\n                    placeholder={`Search ${count} records...`}\n                    style={{ height: 21, margin: 0 }}\n                />\n            )}\n        </div>\n    );\n};\n\nexport const _SelectColumnFilter = ({\n    column: { filterValue, setFilter, preFilteredRows, id }\n}) => {\n\n    const options = useMemo(() => {\n        const options = new Set();\n\n        preFilteredRows.forEach(row => {\n            options.add(row.values[id]);\n        });\n\n        return [...options.values()];\n    }, [id, preFilteredRows]);\n\n    const [btnActive, setBtnActive] = useState(false);\n\n    const toggleBtn = () => {\n        setBtnActive(!btnActive);\n        setFilter(undefined);\n    };\n\n    return (\n        <div style={{ display: 'flex' }}>\n\n            <div onClick={toggleBtn} style={{ cursor: 'pointer' }}>\n                {btnActive\n                    ? <IconTable type='search' color='green' />\n                    : <IconTable type='search' />\n                }\n            </div>\n\n            {btnActive && (\n                <select\n                    value={filterValue}\n                    onChange={e => setFilter(e.target.value || undefined)}\n                    style={{ height: 21, width: 40, margin: 0 }}\n                >\n                    <option value=''>All</option>\n                    {options.map((option, i) => (\n                        <option key={i} value={option}>\n                            {option}\n                        </option>\n                    ))}\n                </select>\n            )}\n        </div>\n    );\n};\n\nexport const GlobalFilter = ({ filter, setFilter }) => {\n\n    const [value, setValue] = useState(filter);\n\n    const onChange = value => {\n        setTimeout(() => {\n            setFilter(value || undefined);\n        }, 1000);\n    };\n\n    return (\n        <Input.Search\n            placeholder='Search ...'\n            value={value || ''}\n            onChange={e => {\n                setValue(e.target.value);\n                onChange(e.target.value);\n            }}\n            style={{ width: 200 }}\n        />\n    );\n};\n\n\n\nconst _TableDrawingList = ({ data }) => {\n\n    const [openAllColumn, setOpenAllColumn] = useState(false);\n    const { title, drawings, headers, columnsHeaderSorted, isSelectedShownOnly } = data;\n\n    const tableDataInput = drawings;\n    const columnsName = getColumnsHeader1(headers);\n\n\n    const columns = useMemo(() => {\n        return columnsHeaderSorted && !openAllColumn && isSelectedShownOnly ?\n            getHeaderSorted1(columnsName, columnsHeaderSorted) :\n            columnsName;\n    }, [columnsHeaderSorted, columnsName, openAllColumn, isSelectedShownOnly]);\n\n\n    const [reorderColumns, setReorderColumns] = useState(false);\n    const columnsInput = reorderColumns ? reorderColumns : columns;\n\n\n    const openAllColumnTable = () => {\n        setOpenAllColumn(true);\n    };\n\n    const moveColumnLocation = (value, columnActive) => {\n        if (value === 1 || value === -1) {\n            setReorderColumns(changeColumnOrder(columnsInput, columnActive.id, value));\n        };\n    };\n\n\n    return (\n        <Table\n            title={title}\n            columns={columnsInput}\n            data={tableDataInput}\n            openAllColumnTable={openAllColumnTable}\n            moveColumnLocation={moveColumnLocation}\n            columnsHeaderSorted={columnsHeaderSorted}\n            hiddenColumnsArray={columns.filter(\n                cl => cl.Header.includes('(A)') ||\n                    cl.Header.includes('(T)') ||\n                    cl.Header === 'Model Progress' ||\n                    cl.Header === 'Drawing Progress'\n            ).map(x => x.accessor)}\n\n        />\n    );\n};\nexport default _TableDrawingList;\n\n\n\nconst Table = ({\n    columns,\n    data,\n    hiddenColumnsArray,\n    openAllColumnTable,\n    title,\n    moveColumnLocation,\n    columnsHeaderSorted\n}) => {\n\n    const listRef = useRef();\n    const defaultColumn = useMemo(() => ({\n        // minWidth: 30, // minWidth is only used as a limit for resizing\n        // width: 150, // width is used for both the flex-basis and flex-grow\n        // maxWidth: 200, // maxWidth is only used as a limit for resizing\n        Filter: DefaultColumnFilter,\n    }), []);\n\n    const scrollBarSize = useMemo(() => scrollbarWidth(), []);\n\n    const reactTable = useTable(\n        {\n            columns,\n            data,\n            defaultColumn,\n            initialState: {\n                hiddenColumns: hiddenColumnsArray\n            },\n            autoResetExpanded: false,\n        },\n        useFilters,\n        useGlobalFilter,\n        useGroupBy,\n        useExpanded,\n        useSortBy,\n        useResizeColumns,\n        useFlexLayout,\n        useRowSelect,\n        useBlockLayout,\n        useColumnOrder,\n        hooks => {\n            hooks.useInstanceBeforeDimensions.push(({ headerGroups }) => {\n                // fix the parent group of the selection button to not be resizable\n                const selectionGroupHeader = headerGroups[0].headers[0];\n                selectionGroupHeader.canResize = true;\n            })\n        },\n    );\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        totalColumnsWidth,\n        prepareRow,\n        disableMultiSort,\n        isMultiSortEvent = (e) => e.shiftKey,\n        state,\n        setGlobalFilter,\n        toggleHideAllColumns,\n        toggleGroupBy,\n        toggleExpanded,\n        expandedRows\n\n    } = reactTable;\n\n    const { globalFilter, expanded } = state;\n    const [panelFunctionVisible, setPanelFunctionVisible] = useState(false);\n    const [topPanelFunction, setTopPanelFunction] = useState(0);\n    const [leftPanelFunction, setLeftPanelFunction] = useState(0);\n\n\n\n\n    useEffect(() => {\n        columnsHeaderSorted && columnsHeaderSorted.forEach(name => {\n            if (name !== 'Drawing Name' && name !== 'Drawing Number') {\n                toggleGroupBy(formatStringNameToId(name), true);\n            };\n        });\n    }, []);\n\n    const [maxRowExpand, setMaxRowExpand] = useState(0);\n    useEffect(() => {\n        setMaxRowExpand(Object.values(expanded).length);\n\n        if (Object.values(expanded).length >= maxRowExpand) {\n            expandedRows.forEach(row => {\n                toggleExpanded(row.id, true);\n            });\n        };\n    }, [expandedRows]);\n\n\n    const handleMouseDown = (e) => {\n        if (e.button === 0) setPanelFunctionVisible(false);\n    };\n    useEffect(() => {\n        document.addEventListener('mousedown', handleMouseDown);\n        return () => document.removeEventListener('mousedown', handleMouseDown);\n    }, []);\n\n    const panelFunction = (e, column) => {\n        setColumnActive(column);\n        setPanelFunctionVisible(true);\n        const clickX = e.clientX;\n        const clickY = e.clientY;\n        const screenW = window.innerWidth;\n        const screenH = window.innerHeight;\n\n        const right = (screenW - clickX) > 179;\n        const left = !right;\n        const top = (screenH - clickY) > 379;\n        const bottom = !top;\n\n        if (right) {\n            setLeftPanelFunction(`${clickX + 5}px`);\n        };\n        if (left) {\n            setLeftPanelFunction(`${clickX - 179 - 5}px`);\n        };\n        if (top) {\n            setTopPanelFunction(`${clickY + 5}px`);\n        };\n        if (bottom) {\n            setTopPanelFunction(`${clickY - 379 - 5}px`);\n        };\n    };\n\n    const [columnActive, setColumnActive] = useState(false);\n    const buttonPanelFunction = (btn) => {\n        if (btn === 'Hide this column') {\n            columnActive.toggleHidden(true);\n        } else if (btn === 'Unhide all') {\n            toggleHideAllColumns(false);\n        } else if (btn === 'Move to left') {\n            moveColumnLocation(-1, columnActive);\n        } else if (btn === 'Move to right') {\n            moveColumnLocation(1, columnActive);\n        } else if (btn === 'Move to ...') {\n            return;\n        };\n    };\n\n\n\n    const RenderRow = useCallback(args => {\n        const { index, style } = args;\n        const row = rows[index];\n        prepareRow(row);\n\n        return (\n            <div {...row.getRowProps({ style })} className='tr'>\n                {row.cells.map(cell => {\n                    return (\n                        <div {...cell.getCellProps(cellProps)} className='td'>\n                            {cell.isGrouped ? (\n                                <>\n                                    <span {...row.getExpandedToggleProps()}>\n                                        {row.isExpanded ? <IconTable type='up-circle' color='grey' /> : <IconTable type='down-circle' color='grey' />}\n                                    </span>{' '}\n                                    {cell.render('Cell')} ({row.subRows.length + ' nos'})\n                                </>\n                            ) : cell.isAggregated ? cell.render('Aggregated')\n                                    : cell.isPlaceholder ? null\n                                        : checkCellFix(cell) ? null\n                                            : cell.render('Cell')}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }, [prepareRow, rows]);\n\n\n\n\n    return (\n        <>\n            <div style={{ display: 'flex', marginBottom: 15 }}>\n                <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n\n                {title.type === 'Sorted table' && (\n                    <Button onClick={openAllColumnTable} style={{ marginLeft: 15, background: colorType.grey4 }}>View all drawings</Button>\n                )}\n\n            </div>\n\n\n            <Container>\n                <div {...getTableProps()} className='table'>\n                    <div className='thead'>\n                        {headerGroups.map(headerGroup => (\n                            <div className='tr' {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map(column => {\n                                    return (\n                                        <div\n                                            className='th'\n                                            {...column.getHeaderProps(headerProps)}\n                                        >\n                                            {column.canResize && (\n                                                <div {...column.getResizerProps()}\n                                                    className={`resizer ${column.isResizing ? 'isResizing' : ''}`}\n                                                />\n                                            )}\n\n                                            <div style={{ fontWeight: 'bold', marginRight: 10 }}>\n                                                {column.render('Header')}\n                                            </div>\n\n                                            {column.canGroupBy && column.Header !== '' && (\n                                                <span {...column.getGroupByToggleProps()}>\n                                                    {headerWithNoGroupFunction(column.Header) ? null\n                                                        : column.isGrouped ? <IconTable type='stop' color='red' />\n                                                            : <IconTable type='plus-circle' />\n                                                    }\n                                                </span>\n                                            )}\n\n                                            <span {...column.getSortByToggleProps()}\n                                                onClick={\n                                                    column.canSort ? (e) => {\n                                                        e.persist();\n                                                        column.toggleSortBy(undefined, !disableMultiSort && isMultiSortEvent(e));\n                                                        listRef.current.scrollToItem(0);\n                                                    } : undefined\n                                                }\n                                            >\n                                                {column.isSorted\n                                                    ? (column.isSortedDesc\n                                                        ? <IconTable type='sort-ascending' color='green' />\n                                                        : <IconTable type='sort-descending' color='green' />)\n                                                    : <IconTable type='ordered-list' />}\n                                            </span>\n\n                                            <span>\n                                                {column.canFilter && column.Header !== ''\n                                                    ? column.render('Filter') : null\n                                                }\n                                            </span>\n\n\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div {...getTableBodyProps()} className='tbody'>\n                        <FixedSizeList\n                            ref={listRef}\n                            height={500}\n                            itemCount={rows.length}\n                            itemSize={25}\n                            width={totalColumnsWidth}\n                            // width={3500}\n                            style={{ overflowX: 'hidden' }}\n                        >\n                            {RenderRow}\n                        </FixedSizeList>\n                    </div>\n\n                </div>\n            </Container>\n\n            {panelFunctionVisible && (\n                <PanelRightClick\n                    left={leftPanelFunction} top={topPanelFunction}\n                    buttonPanelFunction={buttonPanelFunction}\n                />\n            )}\n\n        </>\n    );\n};\n\nconst borderLine = `1px solid ${colorType.grey2}`\n\nconst Container = styled.div`\n\n    white-space: nowrap;\n    height: ${0.6 * window.innerHeight}px;\n    display: block;\n    overflow: scroll;\n    overflow-y: hidden;\n    border: ${borderLine};\n\n\n    .table {\n\n        border-spacing: 0;\n        position: relative;\n\n        .thead {\n            position: absolute;\n            z-index: 1000;\n            background-color: ${colorType.grey1};\n            top: 0;\n        }\n\n        .tbody {\n            padding-top: 36px;\n            overflow-y: auto;\n            overflow-x: hidden;\n            height: ${0.7 * window.innerHeight}px;\n            /* width: ${props => props.totalWidth}px; */\n            /* .tr:first-child {\n                padding-top: 100px; // shift down the first row of body\n            } */\n        }\n\n        .tr {\n            :last-child {\n                .td {\n                    /* border-bottom: 0; */\n                }\n            }\n        }\n\n    \n        /* .tr:nth-child(even) {\n            background-color: ${colorType.grey4};\n        } */\n        \n        .th, .td {\n            color: black;\n            margin: 0;\n            padding: 0.1rem;\n            padding-left: 0.3rem;\n            border-right: ${borderLine};\n            border-bottom: ${borderLine};\n            /* In this example we use an absolutely position resizer, so this is required. */\n            position: relative;\n\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n\n            \n            :last-child {\n                border-right: 0;\n            }\n            .resizer {\n                right: 0;\n                background: ${colorType.grey1};\n                width: 5px;\n                height: 100%;\n                position: absolute;\n                top: 0;\n                z-index: 1;\n                /* prevents from scrolling while dragging on touch devices */\n                touch-action :none;\n                &.isResizing {\n                    background: ${colorType.grey2};\n                }\n            }\n        }\n\n        .th {\n            padding: 0.4rem;\n        }\n\n        \n    }\n`;\n\n\n\nconst IconTable = ({ type, color }) => {\n    return (\n        <IconStyle color={color || colorType.black} type={type} />\n    );\n};\n\nconst IconStyle = styled(Icon)`\n   font-size: 16px;\n   margin-right: 5px;\n   color: ${props => props.color};\n   padding: 2px;\n   border-radius: 3px;\n   border: 0.5px solid ${colorType.grey4};\n   :hover {\n      background: ${colorType.grey4}\n   }\n`;\n\n\n\n\n\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\CellHeader.js",["295","296","297","298","299","300"],"import React from 'react';\n\n\nconst CellHeader = (props) => {\n\n    const { className, column, columns, columnIndex, onMouseDownColumnHeader, headerIndex, container } = props;\n\n    return (\n        <div\n            style={{\n                height: '100%',\n                width: '100%',\n                verticalAlign: 'middle',\n            }}\n            // onMouseDown={(e) => onMouseDownColumnHeader(e, column.title)}\n        >\n            {column.title}\n        </div>\n    );\n};\n\nexport default CellHeader;\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\Cell.js",["301","302","303","304"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\IconTable.js",["305"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\InputSearch.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelFunction.js",["306"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelSetting.js",["307","308","309","310","311","312","313","314","315","316","317","318"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\CardPanel.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\PanelRightClick.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecordPanel.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendar.js",["319","320"],"import { Calendar, Radio } from 'antd';\nimport React from 'react';\n\n\nconst { Group, Button } = Radio;\n\n\nconst PanelCalendar = ({ pickDate }) => {\n\n    return (\n        <div style={{ width: 300 }}>\n            <Calendar\n                fullscreen={false}\n                onSelect={pickDate}\n            />\n        </div>\n    );\n};\n\nexport default PanelCalendar;\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableCellHistory.js",["321","322"],"import { List } from 'antd';\nimport Axios from 'axios';\nimport moment from 'moment';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { SERVER_URL } from '../../constants';\nimport { Context as ProjectContext } from '../../contexts/projectContext';\nimport { Context as RowContext } from '../../contexts/rowContext';\n\n\n\nconst TableCellHistory = (props) => {\n\n    const { rowData: { id: rowId }, column } = props;\n\n    const {\n        state: stateProject\n    } = useContext(ProjectContext);\n\n    const {\n        state: stateRow\n    } = useContext(RowContext);\n\n    const { projectId, token } = stateProject.allDataOneSheet;\n    const headers = stateProject.allDataOneSheet.publicSettings.headers;\n    const headerKey = headers.find(hd => hd.text === column.key).key;\n\n\n    const [history, setHistory] = useState()\n\n    useEffect(() => {\n        const fetchCellHistory = async () => {\n            try {\n\n                const res = await Axios.get(`${SERVER_URL}/cell/history/one-cell/`, { params: { token, projectId, rowId, headerKey } });\n\n                setHistory(res.data.histories.reverse());\n\n            } catch (err) {\n                console.log(err);\n            };\n        };\n        fetchCellHistory();\n    }, [])\n\n\n    return (\n        <div style={{ width: '100%', padding: 15, maxHeight: window.innerHeight * 0.7, overflowY: 'scroll' }}>\n            <List\n                size='small'\n                header={null}\n                footer={null}\n                bordered\n                dataSource={history}\n                renderItem={item => (\n                    <List.Item>\n                        <div>\n                            <div>{`${item.email}`}</div>\n                            <div style={{ fontSize: 12, color: 'grey' }}>{moment(item.createdAt).format('DD/MM/YY - HH:mm')}</div>\n                            <div style={{ fontWeight: 'bold' }}>{item.text}</div>\n                        </div>\n                    </List.Item>\n                )}\n            />\n        </div>\n    );\n};\n\nexport default TableCellHistory;\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableDrawingDetail.js",["323"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\TableActivityHistory.js",["324","325","326","327","328","329"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ReorderColumnForm.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelConfirm.js",["330"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormSort.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilter.js",["331","332"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormGroup.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormCellColorizedCheck.js",["333","334"],"import Axios from 'axios';\nimport moment from 'moment';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { SERVER_URL } from '../../constants';\nimport { Context as ProjectContext } from '../../contexts/projectContext';\nimport { convertHistoryData } from '../../utils';\nimport ButtonStyle from './ButtonStyle';\nimport PanelCalendarDuration from './PanelCalendarDuration';\n\n\n\n\nconst FormCellColorizedCheck = ({ setCellHistoryArr }) => {\n\n   const { state: stateProject } = useContext(ProjectContext);\n\n   const { projectId, token } = stateProject.allDataOneSheet;\n   const headersArr = stateProject.allDataOneSheet.publicSettings.headers;\n\n   useEffect(() => {\n      const fetchProjectHistory = async () => {\n         try {\n            const res = await Axios.get(`${SERVER_URL}/cell/history/`, { params: { token, projectId } });\n            setHistoryData(res.data);\n         } catch (err) {\n            console.log(err);\n         };\n      };\n      fetchProjectHistory();\n   }, []);\n\n   const [historyData, setHistoryData] = useState([]);\n\n   const [dateRange, setDateRange] = useState(null);\n   const onClickCheck = ({ start, end }) => {\n      let filterCells = convertHistoryData(historyData).filter(cell => {\n         let createdAt = moment(cell.createdAt).toDate();\n         return createdAt >= start && createdAt <= end;\n      });\n      const cellArr = filterCells.map(ch => {\n         const { row: rowId, headerKey } = ch;\n         let headerText = headersArr.find(hd => hd.key === headerKey).text;\n         return {\n            rowId,\n            header: headerText\n         }\n      });\n      let unique = cellArr.reduce((res, itm) => {\n         let result = res.find(item => JSON.stringify(item) == JSON.stringify(itm));\n         if (!result) return res.concat(itm);\n         return res;\n      }, []);\n\n      setCellHistoryArr(unique);\n   };\n   const checkCellWithinDates = (nos) => {\n      const addDays = (date, days) => {\n         let result = new Date(date);\n         result.setDate(result.getDate() + days);\n         return result;\n      };\n      let today = new Date();\n      let dateBefore = addDays(today, nos);\n      return {\n         start: dateBefore,\n         end: today\n      };\n   };\n\n\n   return (\n      <div style={{\n         padding: 15\n      }}>\n         <div style={{ display: 'flex', marginBottom: 10 }}>\n            <PanelCalendarDuration pickRangeDate={(e) => setDateRange(e)} />\n            <ButtonStyle\n               onClick={() => dateRange && onClickCheck({ start: dateRange[0], end: dateRange[1] })}\n               marginLeft={5}\n               name='Check Data Changed'\n            />\n         </div>\n         <div style={{ display: 'flex', marginBottom: 20, width: '100%' }}>\n            <ButtonStyle marginRight={5} name='Today'\n               onClick={() => onClickCheck(checkCellWithinDates(-1))}\n            />\n            <ButtonStyle marginRight={5} name='Last 3 Days'\n               onClick={() => onClickCheck(checkCellWithinDates(-3))}\n            />\n            <ButtonStyle marginRight={5} name='Last 7 Days'\n               onClick={() => onClickCheck(checkCellWithinDates(-7))}\n            />\n            <ButtonStyle marginRight={5} name='Last 14 Days'\n               onClick={() => onClickCheck(checkCellWithinDates(-14))}\n            />\n            <ButtonStyle marginRight={5} name='This Month'\n               onClick={() => onClickCheck(checkCellWithinDates(-31))}\n            />\n         </div>\n      </div>\n   );\n};\n\nexport default FormCellColorizedCheck;\n\n","D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDrawingTypeOrder.js",["335","336"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormDateAutomation.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonGroupComp.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ColorizedForm.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\_dashboardComp\\componentsDashboard\\ChartBarRecord.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\FormFilterActivityHistory.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelCalendarDuration.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonStyle.js",["337"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonColumnTag.js",["338"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelPickNumber.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ExportCSV.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ViewTemplateSelect.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonAdminUploadData.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonAdminUploadDataPDD.js",[],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\ButtonAdminUploadRows.js",["339"],"D:\\994 WOH HUP 2020\\Projects\\wh-spreadsheet-mern-rbt\\wh-spreadsheet-client\\src\\layouts\\pageSpreadsheet\\PanelConfirmResetMode.js",[],{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":"344","severity":1,"message":"345","line":4,"column":1,"nodeType":"346","endLine":23,"endColumn":3},{"ruleId":"347","severity":1,"message":"348","line":164,"column":33,"nodeType":"349","messageId":"350","endLine":164,"endColumn":35},{"ruleId":"347","severity":1,"message":"348","line":191,"column":19,"nodeType":"349","messageId":"350","endLine":191,"endColumn":21},{"ruleId":"351","severity":1,"message":"352","line":284,"column":7,"nodeType":"353","messageId":"354","endLine":284,"endColumn":20},{"ruleId":"351","severity":1,"message":"355","line":289,"column":7,"nodeType":"353","messageId":"354","endLine":289,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":327,"column":26,"nodeType":"349","messageId":"350","endLine":327,"endColumn":28},{"ruleId":"347","severity":1,"message":"348","line":329,"column":26,"nodeType":"349","messageId":"350","endLine":329,"endColumn":28},{"ruleId":"356","severity":1,"message":"357","line":368,"column":33,"nodeType":"358","messageId":"359","endLine":368,"endColumn":88},{"ruleId":"347","severity":1,"message":"348","line":368,"column":62,"nodeType":"349","messageId":"350","endLine":368,"endColumn":64},{"ruleId":"356","severity":1,"message":"360","line":379,"column":25,"nodeType":"358","messageId":"359","endLine":379,"endColumn":80},{"ruleId":"347","severity":1,"message":"348","line":379,"column":54,"nodeType":"349","messageId":"350","endLine":379,"endColumn":56},{"ruleId":"356","severity":1,"message":"361","line":390,"column":17,"nodeType":"358","messageId":"359","endLine":390,"endColumn":66},{"ruleId":"347","severity":1,"message":"348","line":390,"column":46,"nodeType":"349","messageId":"350","endLine":390,"endColumn":48},{"ruleId":"351","severity":1,"message":"362","line":735,"column":7,"nodeType":"353","messageId":"354","endLine":735,"endColumn":23},{"ruleId":"351","severity":1,"message":"363","line":760,"column":7,"nodeType":"353","messageId":"354","endLine":760,"endColumn":29},{"ruleId":"351","severity":1,"message":"364","line":790,"column":7,"nodeType":"353","messageId":"354","endLine":790,"endColumn":28},{"ruleId":"356","severity":1,"message":"361","line":831,"column":47,"nodeType":"358","messageId":"359","endLine":831,"endColumn":94},{"ruleId":"347","severity":1,"message":"348","line":831,"column":74,"nodeType":"349","messageId":"350","endLine":831,"endColumn":76},{"ruleId":"347","severity":1,"message":"348","line":268,"column":23,"nodeType":"349","messageId":"350","endLine":268,"endColumn":25},{"ruleId":"347","severity":1,"message":"348","line":278,"column":23,"nodeType":"349","messageId":"350","endLine":278,"endColumn":25},{"ruleId":"347","severity":1,"message":"348","line":288,"column":23,"nodeType":"349","messageId":"350","endLine":288,"endColumn":25},{"ruleId":"351","severity":1,"message":"365","line":301,"column":7,"nodeType":"353","messageId":"354","endLine":301,"endColumn":21},{"ruleId":"347","severity":1,"message":"348","line":458,"column":28,"nodeType":"349","messageId":"350","endLine":458,"endColumn":30},{"ruleId":"347","severity":1,"message":"348","line":459,"column":18,"nodeType":"349","messageId":"350","endLine":459,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":460,"column":18,"nodeType":"349","messageId":"350","endLine":460,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":479,"column":28,"nodeType":"349","messageId":"350","endLine":479,"endColumn":30},{"ruleId":"347","severity":1,"message":"348","line":480,"column":18,"nodeType":"349","messageId":"350","endLine":480,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":481,"column":18,"nodeType":"349","messageId":"350","endLine":481,"endColumn":20},{"ruleId":"351","severity":1,"message":"366","line":522,"column":13,"nodeType":"353","messageId":"354","endLine":522,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":522,"column":28,"nodeType":"349","messageId":"350","endLine":522,"endColumn":30},{"ruleId":"347","severity":1,"message":"348","line":523,"column":18,"nodeType":"349","messageId":"350","endLine":523,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":524,"column":18,"nodeType":"349","messageId":"350","endLine":524,"endColumn":20},{"ruleId":"367","severity":1,"message":"368","line":121,"column":7,"nodeType":"369","endLine":121,"endColumn":9,"suggestions":"370"},{"ruleId":"371","severity":1,"message":"372","line":142,"column":19,"nodeType":"373","endLine":142,"endColumn":118},{"ruleId":"371","severity":1,"message":"372","line":143,"column":19,"nodeType":"373","endLine":143,"endColumn":93},{"ruleId":"371","severity":1,"message":"374","line":144,"column":19,"nodeType":"373","endLine":144,"endColumn":74},{"ruleId":"371","severity":1,"message":"374","line":145,"column":19,"nodeType":"373","endLine":145,"endColumn":110},{"ruleId":"371","severity":1,"message":"375","line":160,"column":28,"nodeType":"373","endLine":165,"endColumn":30},{"ruleId":"371","severity":1,"message":"376","line":169,"column":28,"nodeType":"373","endLine":173,"endColumn":30},{"ruleId":"371","severity":1,"message":"377","line":177,"column":28,"nodeType":"373","endLine":181,"endColumn":30},{"ruleId":"371","severity":1,"message":"378","line":185,"column":28,"nodeType":"373","endLine":190,"endColumn":30},{"ruleId":"371","severity":1,"message":"379","line":226,"column":16,"nodeType":"373","endLine":229,"endColumn":18},{"ruleId":"367","severity":1,"message":"380","line":90,"column":7,"nodeType":"369","endLine":90,"endColumn":9,"suggestions":"381"},{"ruleId":"367","severity":1,"message":"382","line":441,"column":7,"nodeType":"369","endLine":441,"endColumn":9,"suggestions":"383"},{"ruleId":"351","severity":1,"message":"384","line":459,"column":28,"nodeType":"353","messageId":"354","endLine":459,"endColumn":46},{"ruleId":"385","severity":1,"message":"386","line":785,"column":19,"nodeType":"358","messageId":"387","endLine":785,"endColumn":21},{"ruleId":"385","severity":1,"message":"386","line":1111,"column":24,"nodeType":"358","messageId":"387","endLine":1111,"endColumn":26},{"ruleId":"351","severity":1,"message":"388","line":10,"column":7,"nodeType":"353","messageId":"354","endLine":10,"endColumn":28},{"ruleId":"351","severity":1,"message":"389","line":13,"column":19,"nodeType":"353","messageId":"354","endLine":13,"endColumn":28},{"ruleId":"351","severity":1,"message":"390","line":252,"column":11,"nodeType":"353","messageId":"354","endLine":252,"endColumn":24},{"ruleId":"367","severity":1,"message":"391","line":315,"column":8,"nodeType":"369","endLine":315,"endColumn":10,"suggestions":"392"},{"ruleId":"367","severity":1,"message":"393","line":326,"column":8,"nodeType":"369","endLine":326,"endColumn":22,"suggestions":"394"},{"ruleId":"351","severity":1,"message":"395","line":337,"column":11,"nodeType":"353","messageId":"354","endLine":337,"endColumn":24},{"ruleId":"351","severity":1,"message":"396","line":6,"column":13,"nodeType":"353","messageId":"354","endLine":6,"endColumn":22},{"ruleId":"351","severity":1,"message":"397","line":6,"column":32,"nodeType":"353","messageId":"354","endLine":6,"endColumn":39},{"ruleId":"351","severity":1,"message":"398","line":6,"column":41,"nodeType":"353","messageId":"354","endLine":6,"endColumn":52},{"ruleId":"351","severity":1,"message":"399","line":6,"column":54,"nodeType":"353","messageId":"354","endLine":6,"endColumn":77},{"ruleId":"351","severity":1,"message":"400","line":6,"column":79,"nodeType":"353","messageId":"354","endLine":6,"endColumn":90},{"ruleId":"351","severity":1,"message":"401","line":6,"column":92,"nodeType":"353","messageId":"354","endLine":6,"endColumn":101},{"ruleId":"367","severity":1,"message":"402","line":215,"column":7,"nodeType":"369","endLine":215,"endColumn":29,"suggestions":"403"},{"ruleId":"367","severity":1,"message":"404","line":233,"column":7,"nodeType":"369","endLine":233,"endColumn":36,"suggestions":"405"},{"ruleId":"351","severity":1,"message":"406","line":259,"column":11,"nodeType":"353","messageId":"354","endLine":259,"endColumn":19},{"ruleId":"351","severity":1,"message":"407","line":259,"column":21,"nodeType":"353","messageId":"354","endLine":259,"endColumn":32},{"ruleId":"351","severity":1,"message":"408","line":99,"column":7,"nodeType":"353","messageId":"354","endLine":99,"endColumn":14},{"ruleId":"351","severity":1,"message":"409","line":118,"column":23,"nodeType":"353","messageId":"354","endLine":118,"endColumn":31},{"ruleId":"356","severity":1,"message":"410","line":349,"column":64,"nodeType":"358","messageId":"359","endLine":349,"endColumn":147},{"ruleId":"385","severity":1,"message":"386","line":585,"column":40,"nodeType":"358","messageId":"387","endLine":585,"endColumn":42},{"ruleId":"385","severity":1,"message":"386","line":705,"column":29,"nodeType":"358","messageId":"387","endLine":705,"endColumn":31},{"ruleId":"356","severity":1,"message":"361","line":902,"column":44,"nodeType":"358","messageId":"359","endLine":902,"endColumn":93},{"ruleId":"347","severity":1,"message":"348","line":902,"column":73,"nodeType":"349","messageId":"350","endLine":902,"endColumn":75},{"ruleId":"356","severity":1,"message":"361","line":920,"column":44,"nodeType":"358","messageId":"359","endLine":920,"endColumn":93},{"ruleId":"347","severity":1,"message":"348","line":920,"column":73,"nodeType":"349","messageId":"350","endLine":920,"endColumn":75},{"ruleId":"356","severity":1,"message":"361","line":938,"column":44,"nodeType":"358","messageId":"359","endLine":938,"endColumn":93},{"ruleId":"347","severity":1,"message":"348","line":938,"column":73,"nodeType":"349","messageId":"350","endLine":938,"endColumn":75},{"ruleId":"356","severity":1,"message":"361","line":959,"column":44,"nodeType":"358","messageId":"359","endLine":959,"endColumn":93},{"ruleId":"347","severity":1,"message":"348","line":959,"column":73,"nodeType":"349","messageId":"350","endLine":959,"endColumn":75},{"ruleId":"347","severity":1,"message":"411","line":968,"column":47,"nodeType":"349","messageId":"350","endLine":968,"endColumn":49},{"ruleId":"351","severity":1,"message":"412","line":5,"column":9,"nodeType":"353","messageId":"354","endLine":5,"endColumn":14},{"ruleId":"351","severity":1,"message":"413","line":5,"column":16,"nodeType":"353","messageId":"354","endLine":5,"endColumn":22},{"ruleId":"351","severity":1,"message":"414","line":20,"column":16,"nodeType":"353","messageId":"354","endLine":20,"endColumn":24},{"ruleId":"367","severity":1,"message":"415","line":43,"column":8,"nodeType":"369","endLine":43,"endColumn":10,"suggestions":"416"},{"ruleId":"367","severity":1,"message":"417","line":84,"column":7,"nodeType":"369","endLine":84,"endColumn":9,"suggestions":"418"},{"ruleId":"367","severity":1,"message":"419","line":124,"column":7,"nodeType":"369","endLine":124,"endColumn":9,"suggestions":"420"},{"ruleId":"421","severity":1,"message":"422","line":209,"column":22,"nodeType":"423","endLine":209,"endColumn":61},{"ruleId":"421","severity":1,"message":"422","line":215,"column":22,"nodeType":"423","endLine":215,"endColumn":61},{"ruleId":"421","severity":1,"message":"422","line":222,"column":22,"nodeType":"423","endLine":222,"endColumn":61},{"ruleId":"421","severity":1,"message":"422","line":228,"column":22,"nodeType":"423","endLine":228,"endColumn":62},{"ruleId":"421","severity":1,"message":"422","line":234,"column":22,"nodeType":"423","endLine":234,"endColumn":62},{"ruleId":"421","severity":1,"message":"422","line":26,"column":29,"nodeType":"423","endLine":29,"endColumn":32},{"ruleId":"351","severity":1,"message":"424","line":22,"column":12,"nodeType":"353","messageId":"354","endLine":22,"endColumn":24},{"ruleId":"367","severity":1,"message":"425","line":182,"column":7,"nodeType":"369","endLine":182,"endColumn":15,"suggestions":"426"},{"ruleId":"367","severity":1,"message":"427","line":30,"column":7,"nodeType":"369","endLine":30,"endColumn":9,"suggestions":"428"},{"ruleId":"347","severity":1,"message":"348","line":49,"column":61,"nodeType":"349","messageId":"350","endLine":49,"endColumn":63},{"ruleId":"429","severity":1,"message":"430","line":382,"column":44,"nodeType":"349","messageId":"431","endLine":382,"endColumn":45},{"ruleId":"432","severity":1,"message":"433","line":798,"column":75,"nodeType":"434","messageId":"435","endLine":798,"endColumn":117,"fix":"436"},{"ruleId":"437","severity":1,"message":"438","line":29,"column":13,"nodeType":"439","messageId":"350","endLine":29,"endColumn":19},{"ruleId":"367","severity":1,"message":"440","line":29,"column":7,"nodeType":"369","endLine":29,"endColumn":17,"suggestions":"441"},{"ruleId":"351","severity":1,"message":"442","line":12,"column":10,"nodeType":"353","messageId":"354","endLine":12,"endColumn":19},"no-native-reassign",["443"],"no-negated-in-lhs",["444"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'getRndInteger' is assigned a value but never used.","Identifier","unusedVar","'findHeaderId' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'preSubRowLv2'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'preSubRowLv1'.","Function declared in a loop contains unsafe references to variable(s) 'preRow'.","'getParentIdHandy' is assigned a value but never used.","'returnPreRowNullSumang' is assigned a value but never used.","'returnPreRowNullHandy' is assigned a value but never used.","'getColumnWidth' is assigned a value but never used.","'addNos' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'projectsArray' and 'token'. Either include them or remove the dependency array. If 'setDataDB' needs the current value of 'projectsArray', you can also switch to useReducer instead of useState and read 'projectsArray' in the reducer.","ArrayExpression",["445"],"react/jsx-pascal-case","Imported JSX component _ChartBarDrawingLate must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component _ChartBarStack must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _ChartProgress must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _ChartPieDrawing must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _ChartBarDrawing must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _FormPivot must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component _TableDrawingList must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has a missing dependency: 'EventKeyDown'. Either include it or remove the dependency array.",["446"],"React Hook useEffect has missing dependencies: 'companies', 'company', 'email', 'fetchDataOneSheet', 'getSheetRows', 'projectId', 'projectName', 'role', 'roleTradeCompany', 'setUserData', and 'token'. Either include them or remove the dependency array.",["447"],"'setExpandColumnKey' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'getSubDrawingByStatus' is assigned a value but never used.","'stateCell' is assigned a value but never used.","'scrollBarSize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'columnsHeaderSorted' and 'toggleGroupBy'. Either include them or remove the dependency array.",["448"],"React Hook useEffect has missing dependencies: 'expanded', 'maxRowExpand', and 'toggleExpanded'. Either include them or remove the dependency array.",["449"],"'panelFunction' is assigned a value but never used.","'className' is assigned a value but never used.","'columns' is assigned a value but never used.","'columnIndex' is assigned a value but never used.","'onMouseDownColumnHeader' is assigned a value but never used.","'headerIndex' is assigned a value but never used.","'container' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'columnIndex', 'inputRender', 'isLockedColumn', 'isLockedRow', and 'rowIndex'. Either include them or remove the dependency array.",["450"],"React Hook useEffect has missing dependencies: 'cellEditDone', 'columnIndex', 'inputRender', 'isLockedColumn', 'isLockedRow', 'rowIndex', and 'stateCell.tempCopiedText'. Either include them or remove the dependency array.",["451"],"'fileList' is assigned a value but never used.","'setFileList' is assigned a value but never used.","'IconRFA' is assigned a value but never used.","'children' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'arrayNodes'.","Expected '!==' and instead saw '!='.","'Group' is assigned a value but never used.","'Button' is assigned a value but never used.","'stateRow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'headerKey', 'projectId', 'rowId', and 'token'. Either include them or remove the dependency array.",["452"],"React Hook useEffect has missing dependencies: 'headers', 'projectId', 'rowData', 'rowId', 'stateRow.rowsVersionsToSave', and 'token'. Either include them or remove the dependency array.",["453"],"React Hook useEffect has missing dependencies: 'activityRecorded', 'dwgName', 'dwgNumber', 'headers', 'projectId', 'revKey', 'stateRow.rowsAll', 'statusKey', and 'token'. Either include them or remove the dependency array.",["454"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'headersShown' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.value', 'id', and 'setFilterSelect'. Either include them or remove the dependency array. If 'setFilterSelect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["455"],"React Hook useEffect has missing dependencies: 'projectId' and 'token'. Either include them or remove the dependency array.",["456"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-useless-computed-key","Unnecessarily computed property ['Drawing Number'] found.","Property","unnecessarilyComputedProperty",{"range":"457","text":"458"},"no-dupe-keys","Duplicate key 'border'.","ObjectExpression","React Hook useEffect has missing dependencies: 'actionType', 'styleFrozen', 'styleHidden', and 'styleShown'. Either include them or remove the dependency array.",["459"],"'projectId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"desc":"472","fix":"473"},{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},[32040,32058],"'Drawing Number'",{"desc":"484","fix":"485"},"Update the dependencies array to be: [projectsArray, token]",{"range":"486","text":"487"},"Update the dependencies array to be: [EventKeyDown]",{"range":"488","text":"489"},"Update the dependencies array to be: [companies, company, email, fetchDataOneSheet, getSheetRows, projectId, projectName, role, roleTradeCompany, setUserData, token]",{"range":"490","text":"491"},"Update the dependencies array to be: [columnsHeaderSorted, toggleGroupBy]",{"range":"492","text":"493"},"Update the dependencies array to be: [expanded, expandedRows, maxRowExpand, toggleExpanded]",{"range":"494","text":"495"},"Update the dependencies array to be: [columnIndex, inputRender, isLockedColumn, isLockedRow, rowIndex, stateCell.cellActive]",{"range":"496","text":"497"},"Update the dependencies array to be: [cellEditDone, columnIndex, inputRender, isLockedColumn, isLockedRow, rowIndex, stateCell.cellAppliedAction, stateCell.tempCopiedText]",{"range":"498","text":"499"},"Update the dependencies array to be: [headerKey, projectId, rowId, token]",{"range":"500","text":"501"},"Update the dependencies array to be: [headers, projectId, rowData, rowId, stateRow.rowsVersionsToSave, token]",{"range":"502","text":"503"},"Update the dependencies array to be: [activityRecorded, dwgName, dwgNumber, headers, projectId, revKey, stateRow.rowsAll, statusKey, token]",{"range":"504","text":"505"},"Update the dependencies array to be: [column, data.value, id, setFilterSelect]",{"range":"506","text":"507"},"Update the dependencies array to be: [projectId, token]",{"range":"508","text":"509"},"Update the dependencies array to be: [actionType, styleFrozen, styleHidden, styleShown, tag.mode]",{"range":"510","text":"511"},[4010,4012],"[projectsArray, token]",[3258,3260],"[EventKeyDown]",[17866,17868],"[companies, company, email, fetchDataOneSheet, getSheetRows, projectId, projectName, role, roleTradeCompany, setUserData, token]",[8932,8934],"[columnsHeaderSorted, toggleGroupBy]",[9259,9273],"[expanded, expandedRows, maxRowExpand, toggleExpanded]",[7607,7629],"[columnIndex, inputRender, isLockedColumn, isLockedRow, rowIndex, stateCell.cellActive]",[8188,8217],"[cellEditDone, columnIndex, inputRender, isLockedColumn, isLockedRow, rowIndex, stateCell.cellAppliedAction, stateCell.tempCopiedText]",[1242,1244],"[headerKey, projectId, rowId, token]",[2695,2697],"[headers, projectId, rowData, rowId, stateRow.rowsVersionsToSave, token]",[4547,4549],"[activityRecorded, dwgName, dwgNumber, headers, projectId, revKey, stateRow.rowsAll, statusKey, token]",[5264,5272],"[column, data.value, id, setFilterSelect]",[999,1001],"[projectId, token]",[864,874],"[actionType, styleFrozen, styleHidden, styleShown, tag.mode]"]